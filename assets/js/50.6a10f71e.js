(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{322:function(t,v,e){"use strict";e.r(v);var _=e(14),a=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/file/2021/12/eafaec801d44b0515f4f9c727ad705de.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" "),v("strong",[t._v("前言")])]),t._v(" "),v("p",[t._v("最近从零到一走完了App从开发到部署的流程，期间有调研很多移动端技术以及App部署的解决方案，借此机会分享给大家的。")]),t._v(" "),v("h3",{attrs:{id:"移动端技术发展史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移动端技术发展史"}},[t._v("#")]),t._v(" "),v("strong",[t._v("移动端技术发展史")])]),t._v(" "),v("h4",{attrs:{id:"智能手机操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#智能手机操作系统"}},[t._v("#")]),t._v(" "),v("strong",[t._v("智能手机操作系统")])]),t._v(" "),v("blockquote",[v("p",[t._v("智能手机，是指像个人电脑一样，具有独立的操作系统，独立的运行空间，可以由用户自行安装软件、游戏、导航等第三方服务商提供的程序，并可以通过移动通讯网络来实现无线网络接入的手机类型的总称。目前智能手机的发展趋势是充分加入了人工智能、5G等多项专利技术，使智能手机成为了用途最为广泛的专利产品。")])]),t._v(" "),v("h5",{attrs:{id:"塞班-symbian-系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#塞班-symbian-系统"}},[t._v("#")]),t._v(" "),v("strong",[t._v("塞班(Symbian) 系统")])]),t._v(" "),v("p",[t._v("虽然现在塞班系统已经Over了，但当年塞班系统是当之无愧的王者，根本就没有一个与之匹配的对手。")]),t._v(" "),v("ul",[v("li",[t._v("2008年12月2日，塞班公司被诺基亚收购。")]),t._v(" "),v("li",[t._v("2011年12月21日，诺基亚官方宣布放弃塞班品牌。由于缺乏新技术支持，塞班的市场份额日益萎缩。")]),t._v(" "),v("li",[t._v("截止至2012年2月，塞班系统的全球市场占有量仅为3%。")]),t._v(" "),v("li",[t._v("2012年5月27日，诺基亚彻底放弃开发塞班系统，但是服务将一直持续到2016年。")]),t._v(" "),v("li",[t._v("2013年1月24日晚间，诺基亚宣布，今后将不再发布塞班系统的手机，意味着塞班这个智能手机操作系统，在长达14年的历史之后，终于迎来了谢幕。")])]),t._v(" "),v("p",[t._v("至此，塞班时代终结，一个时代的终结，必将伴随着新时代的到来。")]),t._v(" "),v("h5",{attrs:{id:"windows-phone"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#windows-phone"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Windows Phone")])]),t._v(" "),v("p",[t._v("Windows Phone(简称为WP)是微软于2010年10月21日正式发布的一款手机操作系统，初始版本命名为Windows Phone7.0。")]),t._v(" "),v("ul",[v("li",[t._v("2011年9月27日，微软发布升级版Windows Phone 7.5，这是首个支持简体中文的系统版本。")]),t._v(" "),v("li",[t._v("2012年6月21日，微软正式发布Windows Phone 8，全新的Windows Phone 8舍弃了老旧Windows CE内核，采用了与Windows系统相同的Windows NT内核，支持很多新的特性。由于内核的改变，所有Windows Phone 7.5系统的手机都将无法升级至Windows Phone 8。")]),t._v(" "),v("li",[t._v("2015年1月22日，微软将Windows Phone 10更名为Windows 10 for Phone。")]),t._v(" "),v("li",[t._v("2015年5月14日，微软官网正式将智能手机上的版本命名为“Windows 10 Mobile” 。")]),t._v(" "),v("li",[t._v("2019年12月10日，微软停止对Windows 10 Mobile的支持。")])]),t._v(" "),v("p",[t._v("2019年12月10日这一天，微软宣布停止对Windows 10 Mobile的支持，也就宣告Windows 10 Mobile告别了历史的舞台。")]),t._v(" "),v("h5",{attrs:{id:"android"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Android")])]),t._v(" "),v("p",[t._v("Android系统大家都非常熟悉了，毕竟是当前市场份额最大的移动操作系统，看一下Android的发展历程：")]),t._v(" "),v("p",[t._v("-2003年10月，Andy Rubin等人创建Android公司，并组建Android团队。")]),t._v(" "),v("p",[t._v("-2005年8月17日，Google低调收购了成立仅22个月的高科技企业Android及其团队。安迪鲁宾成为Google公司工程部副总裁，继续负责Android项目。")]),t._v(" "),v("p",[t._v("-2008年，在GoogleI/O大会上，谷歌提出了AndroidHAL架构图，在同年8月18号，Android获得了美国联邦通信委员会（FCC）的批准，在2008年9月，谷歌正式发布了Android 1.0系统，这也是Android系统最早的版本。")]),t._v(" "),v("p",[t._v("-2009年4月，谷歌正式推出了Android 1.5这款手机，从Android 1.5版本开始，谷歌开始将Android的版本以甜品的名字命名，Android 1.5命名为Cupcake。")]),t._v(" "),v("p",[t._v("-2010年10月，谷歌宣布Android系统达到了第一个里程碑，即电子市场上获得官方数字认证的Android应用数量已经达到了10万个，Android系统的应用增长非常迅速。")]),t._v(" "),v("p",[t._v("-2011年8月2日，Android手机已占据全球智能机市场48%的份额，并在亚太地区市场占据统治地位，终结了塞班系统的霸主地位，跃居全球第一。")]),t._v(" "),v("h5",{attrs:{id:"ios"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ios"}},[t._v("#")]),t._v(" "),v("strong",[t._v("IOS")])]),t._v(" "),v("p",[t._v("iOS是由苹果公司开发的移动操作系统 。苹果公司最早于2007年1月9日的Macworld大会上公布这个系统，其发展历程如下：")]),t._v(" "),v("ul",[v("li",[t._v("2007年10月17日，苹果公司发布了第一个本地化iPhone应用程序开发包（SDK），并且计划在2月发送到每个开发者以及开发商手中。")]),t._v(" "),v("li",[t._v("2010年6月，苹果公司将“iPhone OS”改名为“iOS”，同时还获得了思科iOS的名称授权。")]),t._v(" "),v("li",[t._v("2010年第四季度，苹果公司的iOS占据了全球智能手机操作系统26%的市场份额。")]),t._v(" "),v("li",[t._v("2013年6月10日，苹果公司在WWDC 2013上发布了iOS 7，几乎重绘了所有的系统App，去掉了所有的仿实物化，整体设计风格转为扁平化设计。将于2013年秋正式开放下载更新。")]),t._v(" "),v("li",[t._v("2016年9月14日，苹果发布iOS 10正式版，这是苹果推出移动操作系统以来最大的一次更新，尤其增加了很多特别适应中国国情的功能，比如骚扰电话识别、苹果地图进一步本地化等。")]),t._v(" "),v("li",[t._v("2018年9月13日，2018苹果秋季新品发布会上，苹果CEO库克介绍了苹果生态的一些数据。他表示，搭载苹果iOS系统设备已达20亿部。")]),t._v(" "),v("li",[t._v("2020年5月21日，苹果发布iOS 13.5正式版，iOS 13.5加快了配备面容ID的设备在用户佩戴口罩时显示密码栏的速度，并加入了“暴露通知”API以支持来自公共卫生管理机构的COVID-19接触追踪App。")])]),t._v(" "),v("h5",{attrs:{id:"移动端开发技术演进"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移动端开发技术演进"}},[t._v("#")]),t._v(" "),v("strong",[t._v("移动端开发技术演进")])]),t._v(" "),v("blockquote",[v("p",[t._v("2008年7月IPhone推出第一代手机IPhone 3G，同年9月谷歌正式发布了Android 1.0系统，标志着我们正式步入移动端发展期，按照技术开发的历程移动端（目前特指Android和iOS）的发展大致可以分为4个阶段：Native App -> Hybrid App -> React Native -> Flutter。")])]),t._v(" "),v("h6",{attrs:{id:"native-app-原生应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#native-app-原生应用"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Native App(原生应用)")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/12/9838785a4f6af8e8673da018dedf5193.png",alt:""}})]),t._v(" "),v("blockquote",[v("p",[t._v("这是最为传统的一种移动端开发技术，使用Object-c/Swift、Java/Kotlin这些语言开发出的App一般叫做Native App。")])]),t._v(" "),v("p",[v("strong",[t._v("优势")])]),t._v(" "),v("ol",[v("li",[t._v("一般原生应用体验比较好，性能比较高，打开速度比较快。")]),t._v(" "),v("li",[t._v("原生应用可以直接调用系统的Api，类似摄像头、通讯录等功能，也可以直接访问到本地资源，功能比较强大。")])]),t._v(" "),v("p",[v("strong",[t._v("缺点")])]),t._v(" "),v("ol",[v("li",[t._v("使用这种技术开发一项功能我们需要在Android和IOS两端开发，维护以及开发的成本较高。")]),t._v(" "),v("li",[t._v("同时无法进行动态化更新，如果添加新功能都需要到相应的平台进行发版，尤其IOS审核周期较长，如遇到紧急问题并不能立即解决。")])]),t._v(" "),v("h6",{attrs:{id:"web-app"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#web-app"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Web App")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/file/2021/11/09a0ab685705341c9b63beb618eb16fe.png",alt:""}})]),t._v(" "),v("blockquote",[v("p",[t._v("Web App 其实就是我们使用手机浏览器打开的网址。")])]),t._v(" "),v("p",[v("strong",[t._v("优势")])]),t._v(" "),v("ol",[v("li",[t._v("首先因为是在浏览器中运行，所以天然支持跨平台，一套代码很容易支持移动端和PC两端。")]),t._v(" "),v("li",[t._v("不需要安装到用户的手机中，上线发版比较容易。")])]),t._v(" "),v("p",[v("strong",[t._v("缺点")])]),t._v(" "),v("ol",[v("li",[t._v("Web App无法直接调用系统Api，如摄像头、相册等，局限性较大。")]),t._v(" "),v("li",[t._v("比较依赖于网络，不支持离线模式，页面加载速度受限于浏览器性能，导致一些场景很难去做到原生的体验。")])]),t._v(" "),v("h6",{attrs:{id:"hybrid-app"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hybrid-app"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Hybrid App")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/12/336c9df4504b8d69e52f3193e3bd8d73.png",alt:""}})]),t._v(" "),v("blockquote",[v("p",[t._v("Hybrid是综上所述的两种方式结合，一般被称为混合开发。")])]),t._v(" "),v("p",[t._v("简单来说Hybrid App就是跑到App中的网页，我们可以理解为在App中打开了一个Chrome浏览器。")]),t._v(" "),v("p",[v("strong",[t._v("优势")])]),t._v(" "),v("ol",[v("li",[t._v("Hybrid App 同时拥有 Native 和 Web 的优点，开发模式比较灵活。既可以做到动态化更新，有 bug 直接更新线上 H5 页面就行了。 也可以使用桥接（JS Bridge）来调用系统的摄像头、相册等功能，功能就不仅仅局限于浏览器了。")]),t._v(" "),v("li",[t._v("由于 H5 的优势，Hybrid 也支持跨平台，只要有 WebView，一套代码可以很容易跨iOS、安卓、Web、小程序、快应用多个平台。")])]),t._v(" "),v("p",[v("strong",[t._v("缺点")])]),t._v(" "),v("ol",[v("li",[t._v("缺点主要还是Web App的那些缺点，性能始终突破不了浏览器的限制。")])]),t._v(" "),v("p",[v("strong",[t._v("实例")]),t._v("\n使用Flutter来实现WebView包裹U知并且打开《Svelte，未来十年可能取代React和Vue等其他框架的新兴技术\n》这篇文章。")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("WebView(\n  initialUrl:\n      'https://wiki.uino.com/d/svelte-simple-introduce.html',\n  javascriptMode: JavascriptMode.unrestricted,\n  onWebViewCreated: (WebViewController c) {\n    _controller = c;\n  },\n  javascriptChannels: <JavascriptChannel>[\n    _alertJavascriptChannel(context),\n  ].toSet(),\n  onPageFinished: (v) async {\n    final String cookies = await _controller\n        .runJavascriptReturningResult('document.cookie');\n    print(cookies);\n    ToastManager.showSuccess(cookies);\n  },\n),\n")])])]),v("p",[t._v("手机截图：")]),t._v(" "),v("img",{attrs:{width:"20%",src:"https://pan.udolphin.com/files/image/2021/12/ff52f07af9deb1c26474c9d19b14f5bb.png"}}),t._v(" "),v("h6",{attrs:{id:"react-native"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react-native"}},[t._v("#")]),t._v(" "),v("strong",[t._v("React Native")])]),t._v(" "),v("blockquote",[v("p",[t._v("Face Book(现Meta)在研究了许久Hybrid App之后发现其性能始终需要依赖于浏览器的渲染效率，无法突破浏览器渲染的性能瓶颈，于是转而基于React发布了React Native这个框架。")])]),t._v(" "),v("p",[t._v("受制于浏览器渲染的性能，React Native 吸取经验将渲染这部分交给 Native 来做，大大提高了体验。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/12/608f6525aa9db5c6a251963dc3206c1d.png",alt:""}})]),t._v(" "),v("p",[t._v("RN 中直接使用 JavaScriptCore 来提供 JS 的运行环境，通过 Bridge 去通知 Native 绘制界面，所以最终页面是由Native绘制的，性能相较于Hybrid App要好上不少。")]),t._v(" "),v("p",[t._v("但是受限于JS与Native通信的性能消耗，性能上依然不及Native。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://pan.udolphin.com/files/file/2021/11/541b28f1668ea956576f03d660a49ae2.png",alt:""}})]),t._v(" "),v("h6",{attrs:{id:"flutter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flutter"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Flutter")])]),t._v(" "),v("blockquote",[v("p",[t._v("Flutter吸收了前面的经验，它既没有使用WebView，也没有使用原生控件进行绘制，而是自己实现了一套高性能渲染引擎来绘制UI，这个引擎就是大名鼎鼎的Skia，Skia是一个2D绘图引擎库，Chrome和Android都是采用Skia作为引擎。Flutter完美的解决了跨平台代码复用和性能问题。")])]),t._v(" "),v("p",[v("strong",[t._v("局限性")])]),t._v(" "),v("p",[t._v("Flutter并不是无所不能的，也存在一些局限性，比如")]),t._v(" "),v("ol",[v("li",[t._v("UI平台一致性： 由于Flutter使用自己的引擎进行UI渲染，而不是用原生控件渲染，导致控件显示效果和原生不是完全一样。")]),t._v(" "),v("li",[t._v("动态化更新： 动态化功能在国内来说是一项非常重要的功能，Google官方已经明确现阶段不会实现动态化功能。")])]),t._v(" "),v("h4",{attrs:{id:"小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" "),v("strong",[t._v("小结")])]),t._v(" "),v("p",[t._v("Flutter如此优秀那么以后是否只使用Flutter就可以了呢？笔者认为答案是否定的，在未来很长的一段时间内应该是Native App、Hybrid、React Native、Flutter共存的时代。")]),t._v(" "),v("ul",[v("li",[t._v("首先原生开发时无法完全避开的，一些系统级Api必须使用原生开发。")]),t._v(" "),v("li",[t._v("Hybrid虽然性能有一些缺陷，但是由于其快速迭代功能的特性，依然有其适合的场景，比如一些活动页面都是使用WebView来实现的。")]),t._v(" "),v("li",[t._v("React Native可以使用原生控件渲染，因此，如果您需要使用原生控件而又想跨平台，React Native是不错的选择。")])]),t._v(" "),v("h4",{attrs:{id:"app之间通信方式总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#app之间通信方式总结"}},[t._v("#")]),t._v(" "),v("strong",[t._v("App之间通信方式总结")])]),t._v(" "),v("h4",{attrs:{id:"url-scheme"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#url-scheme"}},[t._v("#")]),t._v(" "),v("strong",[t._v("URL Scheme")])]),t._v(" "),v("blockquote",[v("p",[t._v("由于手机上的沙盒机制，在保证了用户隐私安全的同时也限制了应用之间合理的信息共享，所以开发商提供了一个方法可以再App之间跳转：URL Scheme。通过该方法，可以实现App的互相调用功能。")])]),t._v(" "),v("p",[v("strong",[t._v("组成")])]),t._v(" "),v("p",[t._v("一个完整的 URL Scheme 应该分为 Scheme、Action、Parameter、Value 这 4 个部分，中间用冒号（ :）、斜线 （/）、问号 （?）、等号（=）相连接。举个例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("alipay://open?page=payPage&title=pay\n")])])]),v("p",[t._v("它对应的四个部分：")]),t._v(" "),v("ul",[v("li",[t._v("Scheme（头）:alipay")]),t._v(" "),v("li",[t._v("Action（动作）:open")]),t._v(" "),v("li",[t._v("Parameter（参数: page、title")]),t._v(" "),v("li",[t._v("Value（值: payPage、pay")])]),t._v(" "),v("p",[t._v("大家可以尝试在浏览器中输入"),v("code",[t._v("weixin://")]),t._v("之后观察会发生什么。")]),t._v(" "),v("h4",{attrs:{id:"deeplink"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#deeplink"}},[t._v("#")]),t._v(" "),v("strong",[t._v("Deeplink")])]),t._v(" "),v("blockquote",[v("p",[t._v("指向某个具体内容页面的链接称为Deeplink（深度链接）。")])]),t._v(" "),v("p",[t._v("在 web 开发领域，例如 https://developer.apple.com/ 是指向某个首页的链接， https://developer.apple.com/develop/ 是指向具体内容页的链接。")]),t._v(" "),v("p",[t._v("在移动端开发领域，也想做到像定位一个网页一样，用一种特殊的 URL 来定位一个应用甚至应用里某个具体的功能。")]),t._v(" "),v("ul",[v("li",[t._v("定位某个应用，发挥作用的就是URL 的 scheme 部分，但是需要注意的是应用的URL scheme 并不唯一，也就是说一个应用可以“起多个名”，不同应用的URL scheme也可能因为名字一样发生冲突。")]),t._v(" "),v("li",[t._v("定位到某个应用的某个具体页面，即点击一个链接后，直接链接到App内部的某个页面，而不仅仅是启动 App，要实现这一效果就需要用到deeplink。")])]),t._v(" "),v("p",[t._v("deeplink实质上就是在URL scheme的基础上，附加了更多的信息传递给被唤起的App侧，。")]),t._v(" "),v("h3",{attrs:{id:"ios上线方式总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ios上线方式总结"}},[t._v("#")]),t._v(" "),v("strong",[t._v("IOS上线方式总结")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th"),t._v(" "),v("th",[t._v("App Store")]),t._v(" "),v("th",[t._v("In House")]),t._v(" "),v("th",[t._v("Apple Business Manager")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("分发方式")]),t._v(" "),v("td",[t._v("安装包上传到App store，用户从App Store下载。")]),t._v(" "),v("td",[t._v("安装包由开发者自行存储、自行分发")]),t._v(" "),v("td",[t._v("安装包存储在App Store MDM、输入兑换码或者访问链接进行兑换")])]),t._v(" "),v("tr",[v("td",[t._v("可用性")]),t._v(" "),v("td",[t._v("所有在Apple注册的国家或地区，公开发布")]),t._v(" "),v("td",[t._v("仅限自己组织内部的员工")]),t._v(" "),v("td",[t._v("69个国家与地区，私密发布")])]),t._v(" "),v("tr",[v("td",[t._v("用户要求")]),t._v(" "),v("td",[t._v("公众用户")]),t._v(" "),v("td",[t._v("仅限分发给自己组织内部户的员工")]),t._v(" "),v("td",[t._v("定制应用组织的员工")])]),t._v(" "),v("tr",[v("td",[t._v("应用审核")]),t._v(" "),v("td",[t._v("需要")]),t._v(" "),v("td",[t._v("不需要")]),t._v(" "),v("td",[t._v("需要（相对容易通过）")])]),t._v(" "),v("tr",[v("td",[t._v("账号申请费用")]),t._v(" "),v("td",[t._v("个人或组织，99$ / 年")]),t._v(" "),v("td",[t._v("组织申请，299$ / 年")]),t._v(" "),v("td",[t._v("仅限组织申请，免费，最长五天")])]),t._v(" "),v("tr",[v("td",[t._v("典型应用场景")]),t._v(" "),v("td",[t._v("分发普通大众化应用")]),t._v(" "),v("td",[t._v("企业内部测试用")]),t._v(" "),v("td",[t._v("1. 企业内部应用 "),v("br"),t._v(" 2. 定制应用")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);