(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{301:function(t,a,e){"use strict";e.r(a);var r=e(14),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css网格简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css网格简介"}},[t._v("#")]),t._v(" css网格简介")]),t._v(" "),a("p",[t._v("CSS 网格布局（又名“网格”或“CSS 网格”），是一个基于栅格的二维布局系统，旨在彻底改变基于网格用户界面的设计。CSS 一直以来并没有把布局做的足够好。刚开始，我们使用 "),a("code",[t._v("table")]),t._v(" ，后来是 "),a("code",[t._v("float, position")]),t._v(" 和 "),a("code",[t._v("inline-block")]),t._v(" ，这些本质上是一些 "),a("a",{attrs:{href:"https://baike.baidu.com/item/css%20hack/7026361?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("hacks")]),a("OutboundLink")],1),t._v(" ,而且许多重要功能尚未解决（例如垂直居中）。虽然"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex",target:"_blank",rel:"noopener noreferrer"}},[t._v("flex 弹性布局"),a("OutboundLink")],1),t._v("可以做到这些，但是flex布局实际上是一维布局，而grid布局是二维的，它远比flex布局要强大。以下是grid布局的浏览器兼容性，支持"),a("code",[t._v("Chrome57+")]),t._v("、"),a("code",[t._v("Edge16+")]),t._v("、"),a("code",[t._v("Firefox52+")]),t._v("、"),a("code",[t._v("Safari10.1+")]),t._v("等")]),t._v(" "),a("p",[t._v("兼容性")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/c40f80840379d194cbcf4b46d361fadc.png",alt:""}})]),t._v(" "),a("p",[t._v("下面这张图体现的更直观清晰：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/85316810c7cf54bfd021437c3a8423eb.png",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("网格布局（grid）是最强大的 CSS 布局方案之一。")]),t._v(" "),a("p",[t._v("它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。")]),t._v(" "),a("h1",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h2",{attrs:{id:"容器与项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器与项目"}},[t._v("#")]),t._v(" 容器与项目")]),t._v(" "),a("p",[t._v('采用网格布局的区域，称为"容器"（container）。容器内部采用网格定位的子元素，称为"项目"（item）。')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<div class="container">\n  <div class="item item-1">\n    <p class="sub-item"></p>\n  </div>\n  <div class="item item-2"> </div>\n  <div class="item item-3"> </div>\n</div>\n')])])]),a("p",[t._v("上面代码中，最外层的"),a("code",[t._v("<div>")]),t._v("元素就是容器，第二层的三个"),a("code",[t._v("<div>")]),t._v("元素就是项目。")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("：项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的"),a("code",[t._v("<p>")]),t._v("元素就不是项目。grid 布局只对项目生效。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/7918c9574cd9472e5d9d29e327289b92.png",alt:""}})]),t._v(" "),a("p",[t._v("图1")]),t._v(" "),a("h2",{attrs:{id:"关键点-见图1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键点-见图1"}},[t._v("#")]),t._v(" 关键点（见图1）")]),t._v(" "),a("p",[a("strong",[t._v("容器：")]),t._v(" 需通过"),a("code",[t._v("display：grid")]),t._v("设置为grid容器,容器中包含所有item"),a("br"),t._v(" "),a("strong",[t._v("行：")]),t._v(' 容器里面的水平区域称为"行"（row），横向为行，对应颜色块123'),a("br"),t._v(" "),a("strong",[t._v("行距：")]),t._v(" 上下两个item的间距为行距"),a("br"),t._v(" "),a("strong",[t._v("列：")]),t._v(' 垂直区域称为"列"（column），纵向为列，对应颜色块147'),a("br"),t._v(" "),a("strong",[t._v("列距：")]),t._v(" 左右两个item的间距为列距"),a("br"),t._v(" "),a("strong",[t._v("项目：（item（子元素））：")]),t._v(" 也就是上图对应的123456789颜色块"),a("br"),t._v(" "),a("strong",[t._v("边：")]),t._v(" 每个item共有 上 下 左 右 四条边")]),t._v(" "),a("h2",{attrs:{id:"网格线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网格线"}},[t._v("#")]),t._v(" "),a("strong",[t._v("网格线")])]),t._v(" "),a("h4",{attrs:{id:"构成网格结构的分割线。它们可以是垂直的-列网格线-或水平的-行网格线-并且位于行或列的任一侧。这里的黄线是列网格线的示例-见图2箭头指向的数字1-。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构成网格结构的分割线。它们可以是垂直的-列网格线-或水平的-行网格线-并且位于行或列的任一侧。这里的黄线是列网格线的示例-见图2箭头指向的数字1-。"}},[t._v("#")]),t._v(" 构成网格结构的分割线。它们可以是垂直的（“列网格线”）或水平的（“行网格线”），并且位于行或列的任一侧。这里的黄线是列网格线的示例（见图2箭头指向的数字1）。")]),t._v(" "),a("p",[t._v("正常情况下，"),a("code",[t._v("n")]),t._v("行有"),a("code",[t._v("n + 1")]),t._v("根水平网格线，"),a("code",[t._v("m")]),t._v("列有"),a("code",[t._v("m + 1")]),t._v("根垂直网格线，比如一行就有两根水平网格线。")]),t._v(" "),a("p",[t._v("一般而言，是从左到右，从上到下，1，2，3，4... 进行编号排序。当然也可以从右到左，从下到上，按照 -1，-2，-3...顺序进行编号排序（以图3为例）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/04d6adfabe741f09f8ecf21ff520a63e.png",alt:""}})]),t._v(" "),a("p",[t._v("图3")]),t._v(" "),a("p",[t._v("但是可以选择明确命名这些行。注意行名的括号语法(见图4)：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  grid-template-columns: [first] 40px [line2] auto [line3] 50px [line4];\n  grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] 100px [last-line];\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/842a0b1e3d577da2879e4a0b784b834f.png",alt:""}})]),t._v(" "),a("p",[t._v("图4")]),t._v(" "),a("p",[t._v("请注意，一行可以有多个名称。例如，这里的第二行将有两个名称：row1-end 和 row2-start：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" .container {\n  grid-template-rows: [row1-start] 25% [row1-end row2-start] 100px [third-line] 100px [last-line];\n}\n")])])]),a("p",[t._v("如果定义包含重复部分，可以使用"),a("code",[t._v("repeat()")]),t._v("符号来简化事情：")]),t._v(" "),a("p",[a("strong",[t._v("repeat() 函数")]),t._v("：可以简化重复的值。该函数接受两个参数，第一个参数是重复的次数，第二个参数是所要重复的值。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  grid-template-columns: repeat(3, 100px [col-start]);\n}\n")])])]),a("p",[t._v("这相当于：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  grid-template-columns: 100px [col-start] 100px [col-start] 100px [col-start];\n}\n")])])]),a("p",[t._v("如果多行共享相同的名称，则可以通过行名和行数来引用它们。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".item {\n  grid-column-start: col-start 2;\n}\n")])])]),a("p",[t._v("该"),a("code",[t._v("fr")]),t._v("单元允许将轨道的大小设置为网格容器可用空间的一小部分。例如，这会将每个项目设置为网格容器宽度的三分之一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  grid-template-columns: 1fr 1fr 1fr;\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/a8467eb295023b9a103f41b1e344af90.png",alt:""}})]),t._v(" "),a("p",[t._v("可用空间是在任何非灵活项*之后计算的。*在此示例中，单元可用的可用空间总量"),a("code",[t._v("fr")]),t._v("不包括 50 像素：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  grid-template-columns: 1fr 50px 1fr 1fr;\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/9752665755af11aa2faa1f2503052961.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"网格单元-单元格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网格单元-单元格"}},[t._v("#")]),t._v(" "),a("strong",[t._v("网格单元（单元格）")])]),t._v(" "),a("p",[t._v("两个相邻行和两个相邻列网格线之间的空间。它是网格的一个“单元”。这是行网格线 1 和 2 以及列网格线 3 和 4 之间的网格单元（见图2箭头指向的数字2）。")]),t._v(" "),a("p",[t._v('行和列的交叉区域，称为"单元格"（cell）。')]),t._v(" "),a("p",[t._v("正常情况下，"),a("code",[t._v("n")]),t._v("行和"),a("code",[t._v("m")]),t._v("列会产生"),a("code",[t._v("n x m")]),t._v("个单元格。比如，2行4列会产生8个单元格（见图2）。")]),t._v(" "),a("h2",{attrs:{id:"网格轨道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网格轨道"}},[t._v("#")]),t._v(" "),a("strong",[t._v("网格轨道")])]),t._v(" "),a("p",[t._v("两条相邻网格线之间的空间。您可以将它们视为网格的列或行。这是第二行和第三行网格线之间的网格轨迹（见图2箭头指向的数字3）。")]),t._v(" "),a("h2",{attrs:{id:"网格区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网格区域"}},[t._v("#")]),t._v(" "),a("strong",[t._v("网格区域")])]),t._v(" "),a("p",[t._v("由四条网格线包围的总空间。一个网格区域可以由任意数量的网格单元组成。这是行网格线 1 和 3 以及列网格线 3 和 5 之间的网格区域（见图2箭头指向的数字4）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/00a4857a11a92efd0a2d5161862a2463.png",alt:""}})]),t._v(" "),a("p",[t._v("图2")]),t._v(" "),a("h2",{attrs:{id:"display"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display"}},[t._v("#")]),t._v(" display")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("display属性规定是否/如何显示元素。我们需要使用grid布局，就要把容器设置为grid或者inline-grid")])]),t._v(" "),a("li",[a("code",[t._v("**grid**")]),t._v("– 生成块级网格")]),t._v(" "),a("li",[a("code",[t._v("**inline-grid**")]),t._v("– 生成内联级网格")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".container {\n  display: grid | inline-grid;\n}\n")])])]),a("p",[t._v("效果对比")]),t._v(" "),a("p",[t._v("display:grid;")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/e8efae041d85fa460426db4ec1140500.png",alt:""}})]),t._v(" "),a("p",[t._v("display:inline-grid;")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/0bd6ac286c5e27636cc78625bb0d3211.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器属性"}},[t._v("#")]),t._v(" 容器属性")]),t._v(" "),a("p",[t._v("grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/484d64929ea44fe81a11e59c6d4b7932.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"项目属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目属性"}},[t._v("#")]),t._v(" 项目属性")]),t._v(" "),a("p",[t._v("下面这些属性定义在项目上面。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/d22c13314543b3abc3acaff91d4a1000.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("下面让我们再用表格表示一下这些属性吧")])]),t._v(" "),a("h2",{attrs:{id:"grid相关属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid相关属性"}},[t._v("#")]),t._v(" grid相关属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("属性说明")]),t._v(" "),a("th",[t._v("可选值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("display")])]),t._v(" "),a("td",[t._v("属性规定是否/如何显示元素")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-template-columns")])]),t._v(" "),a("td",[t._v("定义每一列的列宽（这里可以定义网格线名称）")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-template-rows")])]),t._v(" "),a("td",[t._v("定义每一列的行高")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-template-areas")])]),t._v(" "),a("td",[t._v("划分指定区域，一个区域由单个或多个单元格组成")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-template")])]),t._v(" "),a("td",[t._v("属性是"),a("code",[t._v("grid-template-columns")]),t._v("、"),a("code",[t._v("grid-template-rows")]),t._v("和"),a("code",[t._v("grid-template-areas")]),t._v("这三个属性的合并简写形式")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-row-gap")])]),t._v(" "),a("td",[t._v("定义行与行的间距")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-column-gap")])]),t._v(" "),a("td",[t._v("定义列与列间距")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-gap")])]),t._v(" "),a("td",[t._v("定义行和列的间距")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-auto-flow")])]),t._v(" "),a("td",[t._v("设置放置顺序")]),t._v(" "),a("td",[a("code",[t._v("默认:row")]),t._v("、"),a("code",[t._v("column")]),t._v("、"),a("code",[t._v("row dense")]),t._v("、"),a("code",[t._v("column dense")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("justify-items")])]),t._v(" "),a("td",[t._v("属性设置单元格内容的水平位置")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("align-items")])]),t._v(" "),a("td",[t._v("属性设置单元格内容的垂直位置")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("place-items")])]),t._v(" "),a("td",[t._v("属性是"),a("code",[t._v("align-items")]),t._v("属性和"),a("code",[t._v("justify-items")]),t._v("属性的合并简写形式。若省略第二个值，则认为第二个值等于第一个值")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("justify-content")])]),t._v(" "),a("td",[t._v("属性设置grid容器内容的水平位置")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")]),t._v("、"),a("code",[t._v("space-around")]),t._v("、"),a("code",[t._v("space-between")]),t._v("、"),a("code",[t._v("space-evenly")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("align-content")])]),t._v(" "),a("td",[t._v("属性设置grid容器内容的垂直位置 "),a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")]),t._v("、"),a("code",[t._v("space-around")]),t._v("、"),a("code",[t._v("space-between")]),t._v("、"),a("code",[t._v("space-evenly")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("place-content")])]),t._v(" "),a("td",[t._v("属性是"),a("code",[t._v("align-content")]),t._v("属性和"),a("code",[t._v("justify-content")]),t._v("属性的合并简写形式。若省略第二个值，则认为第二个值等于第一个值")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")]),t._v("、"),a("code",[t._v("space-around")]),t._v("、"),a("code",[t._v("space-between")]),t._v("、"),a("code",[t._v("space-evenly")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-auto-columns")])]),t._v(" "),a("td",[t._v("设置多余列的列宽")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-auto-rows")])]),t._v(" "),a("td",[t._v("设置多余行的行高")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid")])]),t._v(" "),a("td",[t._v("属性是"),a("code",[t._v("grid-template-rows")]),t._v("、"),a("code",[t._v("grid-template-columns")]),t._v("、"),a("code",[t._v("grid-template-areas")]),t._v("、"),a("code",[t._v("grid-auto-rows")]),t._v("、"),a("code",[t._v("grid-auto-columns")]),t._v("、"),a("code",[t._v("grid-auto-flow")]),t._v("这六个属性的合并简写形式。")]),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"grid-item相关属性-这是写在子元素的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid-item相关属性-这是写在子元素的属性"}},[t._v("#")]),t._v(" grid-item相关属性（这是写在子元素的属性）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("属性说明")]),t._v(" "),a("th",[t._v("可选值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("grid-column-start")])]),t._v(" "),a("td",[t._v("设置子元素位置的左边框所在的垂直网格线")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-column-end")])]),t._v(" "),a("td",[t._v("设置子元素位置的右边框所在的垂直网格线")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-row-start")])]),t._v(" "),a("td",[t._v("设置子元素位置的上边框所在的水平网格线")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-row-end")])]),t._v(" "),a("td",[t._v("设置子元素位置的下边框所在的水平网格线")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-column")])]),t._v(" "),a("td",[a("code",[t._v("grid-column-start")]),t._v(" 和 "),a("code",[t._v("grid-column-end")]),t._v(" 的简写")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-row")])]),t._v(" "),a("td",[a("code",[t._v("grid-row-start")]),t._v(" 和 "),a("code",[t._v("grid-row-end")]),t._v(" 的简写")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("justify-self")])]),t._v(" "),a("td",[t._v("属性设置单元格内容的水平位置（左中右）")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")]),t._v("、")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("align-self")])]),t._v(" "),a("td",[t._v("属性设置单元格内容的垂直位置")]),t._v(" "),a("td",[a("code",[t._v("start")]),t._v("、"),a("code",[t._v("end")]),t._v("、"),a("code",[t._v("center")]),t._v("、 "),a("code",[t._v("stretch")]),t._v("、")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("place-self")])]),t._v(" "),a("td",[t._v("属性是"),a("code",[t._v("align-self")]),t._v("属性和"),a("code",[t._v("justify-self")]),t._v("属性的合并简写形式。（忽略第二个值，则认为第二个值等于第一个值）")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("grid-area")])]),t._v(" "),a("td",[t._v("属性指定子元素放在哪一个区域")]),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"grid相关函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid相关函数"}},[t._v("#")]),t._v(" grid相关函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("属性说明")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("例子说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("repeat()")])]),t._v(" "),a("td",[t._v("设置重复的值")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("minmax()")])]),t._v(" "),a("td",[t._v("函数产生一个长度范围，不小于参数1，不大于参数2")]),t._v(" "),a("td",[t._v("grid-template-columns: 1fr minmax(100px, 1fr);")]),t._v(" "),a("td",[a("code",[t._v("minmax(100px, 1fr)")]),t._v("表示列宽不小于"),a("code",[t._v("100px")]),t._v("，不大于"),a("code",[t._v("1fr")])])])])]),t._v(" "),a("h2",{attrs:{id:"grid相关函数可使用的关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid相关函数可使用的关键字"}},[t._v("#")]),t._v(" grid相关函数可使用的关键字")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("属性说明")]),t._v(" "),a("th",[t._v("例子")]),t._v(" "),a("th",[t._v("例子说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("auto-fill")])]),t._v(" "),a("td",[t._v("自动填充")]),t._v(" "),a("td",[t._v("grid-template-columns: repeat(auto-fill, 100px);")]),t._v(" "),a("td",[t._v("以100px的宽度一列填充容器，可自动换行")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("fr")])]),t._v(" "),a("td",[t._v("比例属性，根据比例分配宽高")]),t._v(" "),a("td",[t._v("grid-template-columns: 2fr 8fr;")]),t._v(" "),a("td",[t._v("（2+8=10） 第一列2/10（20%），第二列8/10（80%）")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("auto")])]),t._v(" "),a("td",[t._v("自适应宽度")]),t._v(" "),a("td",[t._v("grid-template-columns: 100px auto 100px;")]),t._v(" "),a("td",[t._v("左右宽度100px，中间宽度自适应")])])])]),t._v(" "),a("h1",{attrs:{id:"grid-实战-实现响应式布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid-实战-实现响应式布局"}},[t._v("#")]),t._v(" grid 实战——实现响应式布局")]),t._v(" "),a("h2",{attrs:{id:"fr-实现等分响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fr-实现等分响应式"}},[t._v("#")]),t._v(" fr 实现等分响应式")]),t._v(" "),a("p",[a("code",[t._v("fr")]),t._v(" 等分单位，可以将容器的可用空间分成想要的多个等分空间。利用这个特性，我们能够轻易实现一个等分响应式。"),a("code",[t._v("grid-template-columns: 1fr 1fr 1fr")]),t._v(" 表示容器分为三等分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}\n")])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/b5597702ae39f07f5bf5a083b9c44b75.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"repeat-auto-fit-固定列宽-改变列数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeat-auto-fit-固定列宽-改变列数量"}},[t._v("#")]),t._v(" repeat + auto-fit——固定列宽，改变列数量")]),t._v(" "),a("p",[t._v("等分布局并不只有 "),a("code",[t._v("grid")]),t._v(" 布局才有，像 "),a("code",[t._v("flex")]),t._v(" 布局也能轻松实现，接下来看看更高级的响应式")]),t._v(" "),a("p",[t._v("上面例子的始终都是三列的，但是需求往往希望我们的网格能够固定列宽，并根据容器的宽度来改变列的数量。这个时候，我们可以用到上面提到 "),a("code",[t._v("repeat()")]),t._v(" 函数以及 "),a("code",[t._v("auto-fit")]),t._v(" 关键字。"),a("code",[t._v("grid-template-columns: repeat(auto-fit, 200px)")]),t._v(" 表示固定列宽为 200px，数量是自适应的，只要容纳得下，就会往上排列，代码以及效果实现如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}\n")])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/fe18c809e8dbb0d6320b7790c15c2ea3.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"repeat-auto-fit-minmax-去掉右侧空白"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeat-auto-fit-minmax-去掉右侧空白"}},[t._v("#")]),t._v(" repeat+auto-fit+minmax 去掉右侧空白")]),t._v(" "),a("p",[t._v("上面看到的效果中，右侧通常会留下空白，这是我们不希望看到的。如果列的宽度也能在某个范围内自适应就好了。"),a("code",[t._v("minmax()")]),t._v(" 函数就帮助我们做到了这点。将 "),a("code",[t._v("grid-template-columns: repeat(auto-fit, 200px)")]),t._v(" 改成 "),a("code",[t._v("grid-template-columns: repeat(auto-fit, minmax(200px, 1fr))")]),t._v(" 表示列宽至少 200px，如果还有空余则一起等分。代码以及效果如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".wrapper {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}\n")])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/1b619fa8ac0930aded0da821100e8945.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"repeat-auto-fit-minmax-span-dense-解决空缺问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeat-auto-fit-minmax-span-dense-解决空缺问题"}},[t._v("#")]),t._v(" repeat+auto-fit+minmax-span-dense 解决空缺问题")]),t._v(" "),a("p",[t._v("似乎一切进行得很顺利，但是某天 UI 来说，每个网格元素的长度可能不相同，这也简单，通过 "),a("code",[t._v("span")]),t._v(" 关键字进行设置网格项目的跨度，"),a("code",[t._v("grid-column-start: span 3")]),t._v("，表示这个网格项目跨度为 3。具体的代码与效果如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".item-3 {\n  grid-column-start: span 3;\n}\n")])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/e853afeb57a44ac9dde8043efa8404f7.gif",alt:""}})]),t._v(" "),a("p",[t._v("不对，怎么右侧又有空白了？原来是有一些长度太长了，放不下，这个时候就到我们的 "),a("code",[t._v("dense")]),t._v(" 关键字出场了。"),a("code",[t._v("grid-auto-flow: row dense")]),t._v(" 表示尽可能填充，而不留空白，代码以及效果如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".wrapper, .wrapper-1 {\n  margin: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px 20px;\n  grid-auto-rows: 50px;\n}\n.wrapper-1 {\n  grid-auto-flow: row dense;\n}\n")])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/5a763e890294a565b11d8bb8200541c2.gif",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"只要一行grid代码-实现五种-css-经典布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只要一行grid代码-实现五种-css-经典布局"}},[t._v("#")]),t._v(" 只要一行grid代码，实现五种 css 经典布局")]),t._v(" "),a("h2",{attrs:{id:"空间居中布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间居中布局"}},[t._v("#")]),t._v(" 空间居中布局")]),t._v(" "),a("p",[t._v("空间居中布局指的是，不管容器的大小，项目总是占据中心点。")]),t._v(" "),a("p",[t._v("一行代码为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" place-items: center;\n")])])]),a("p",[t._v("样式代码如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 空间居中布局\n// place-items: <align-items> <justify-items>;\n.wrapper {\n  display: grid;\n  // 居中\n  place-items: center;\n  // 左上\n  // place-items: start;\n  // 右下\n  // place-items: end;\n  background: lightblue;\n  width: 500px;\n  height: 500px;\n\n  .child {\n    padding: 0.5rem;\n    border-radius: 10px;\n    border: 1px solid red;\n    background: lightpink;\n    font-size: 2rem;\n    text-align: center;\n  }\n}\n")])])]),a("p",[t._v("结构代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html lang="zh-CN">\n\n<head>\n  <link rel="stylesheet" type="text/css" href="<%= cdn_css %>/css/index/index2.css" />\n</head>\n\n<body>\n  <div class="wrapper">\n    <div class="child">😊</div>\n  </div>\n</body>\n\n</html>\n')])])]),a("p",[t._v("效果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/63a230a0b100765293bba37d0bfa9e30.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"两栏式布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两栏式布局"}},[t._v("#")]),t._v(" 两栏式布局")]),t._v(" "),a("p",[t._v("两栏式布局就是一个边栏，一个主栏。")]),t._v(" "),a("p",[t._v("下面的实现是，边栏始终存在，主栏根据设备宽度，变宽或者变窄。")]),t._v(" "),a("p",[t._v("一行代码为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\ngrid-template-columns: minmax(150px, 25%) 1fr;\n")])])]),a("p",[t._v("上面代码中，"),a("code",[t._v("grid-template-columns")]),t._v("指定页面分成两列。第一列的宽度是"),a("code",[t._v("minmax(150px, 25%)")]),t._v("，即最小宽度为"),a("code",[t._v("150px")]),t._v(">，最大宽度为总宽度的25%；第二列为"),a("code",[t._v("1fr")]),t._v("，即所有剩余宽度。")]),t._v(" "),a("p",[t._v("效果：")]),t._v(" "),a("p",[t._v("样式代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 两栏式布局\n.wrapper {\n  display: grid;\n  grid-template-columns: minmax(150px, 25%) 1fr;\n  grid-template-rows: 500px;\n\n  .child {\n    padding: 0.5rem;\n    border-radius: 10px;\n    border: 1px solid red;\n    background: lightpink;\n    font-size: 2rem;\n    text-align: center;\n  }\n\n  .child1 {\n    background-color: orchid;\n  }\n}\n")])])]),a("p",[t._v("结构代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html lang="zh-CN">\n\n<head>\n  <link rel="stylesheet" type="text/css" href="<%= cdn_css %>/css/index/index2.css" />\n</head>\n\n<body>\n\n  <div class="wrapper">\n    <div class="child">边栏</div>\n    <div class="child child1">主栏</div>\n  </div>\n</body>\n\n</html>\n')])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/a1ce13847f934a0ca44721516a64b253.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"三明治布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三明治布局"}},[t._v("#")]),t._v(" 三明治布局")]),t._v(" "),a("p",[t._v("三明治布局指的是，页面在垂直方向上，分成三部分：页眉、内容区、页脚。")]),t._v(" "),a("p",[t._v("这个布局会根据设备宽度，自动适应，并且不管内容区有多少内容，页脚始终在容器底部（粘性页脚）。也就是说，这个布局总是会占满整个页面高度。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/c6b51dfa04987e34d3cee1cb2256573f.png",alt:""}}),a("br"),t._v("\n一行代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" grid-template-rows: auto 1fr auto;\n")])])]),a("p",[t._v("上面代码写在容器上面，指定采用 grid 布局。核心代码是"),a("code",[t._v("grid-template-rows")]),t._v("那一行，指定垂直高度怎么划分，这里是从上到下分成三部分。第一部分（页眉）和第三部分（页脚）的高度都为"),a("code",[t._v("auto")]),t._v("，即本来的内容高度；第二部分（内容区）的高度为"),a("code",[t._v("1fr")]),t._v("，即剩余的所有高度，这可以保证页脚始终在容器的底部。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/8d56f9086dc09525126821791ad641c2.png",alt:""}})]),t._v(" "),a("p",[t._v("样式代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 三明治布局 \n.wrapper {\n  display: grid;\n  height: 100vh;\n  grid-template-rows: auto 1fr auto;\n\n  h1 {\n    padding: 2rem;\n  }\n\n  header {\n    background: lightpink;\n\n  }\n\n  main {\n    background: coral;\n  }\n\n  footer {\n    background: wheat;\n  }\n}\n")])])]),a("p",[t._v("结构代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    \x3c!-- 三明治布局 --\x3e\n    <div class="wrapper">\n      <header>\n        <h1>Header</h1>\n      </header>\n      <main>\n        <h1>Main</h1>\n      </main>\n      <footer>\n        <h1>Footer</h1>\n      </footer>\n    </div>\n')])])]),a("p",[t._v("效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/e8c290da340bacb75fcd0f13da572a7b.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"圣杯布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#圣杯布局"}},[t._v("#")]),t._v(" 圣杯布局")]),t._v(" "),a("p",[t._v("圣杯布局是最常用的布局，所以被比喻为圣杯。它将页面分成五个部分，除了页眉和页脚，内容区分成左边栏、主栏、右边栏。")]),t._v(" "),a("p",[t._v("一行代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("grid-template: auto 1fr auto / auto 1fr auto;\n")])])]),a("p",[t._v("上面代码要写在容器上面，指定采用 grid 布局。核心代码是"),a("code",[t._v("grid-template")]),t._v("属性那一行，它是两个属性"),a("code",[t._v("grid-template-rows")]),t._v("（垂直方向）和"),a("code",[t._v("grid-template-columns")]),t._v("（水平方向）的简写形式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/0ebe2602f401058ae09319fbae7de0e4.png",alt:""}})]),t._v(" "),a("p",[t._v("这里的实现是，不管页面宽度，内容区始终分成三栏。如果宽度太窄，主栏和右边栏会看不到。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/47840b6656b9d324aa8d5a84bae14154.png",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("grid-template-rows")]),t._v("和"),a("code",[t._v("grid-template-columns")]),t._v("都是"),a("code",[t._v("auto 1fr auto")]),t._v("，就表示页面在垂直方向和水平方向上，都分成三个部分。第一部分（页眉和左边栏）和第三部分（页脚和右边栏）都是本来的内容高度（或宽度），第二部分（内容区和主栏）占满剩余的高度（或宽度）。")]),t._v(" "),a("p",[t._v("样式代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 圣杯布局\n.wrapper {\n  display: grid;\n  height: 100vh;\n  grid-template: auto 1fr auto / auto 1fr auto;\n\n  header {\n    background: lightpink;\n    padding: 2rem;\n    grid-column: 1 / 4;\n  }\n\n  .left-sidebar {\n    background: lightblue;\n    grid-column: 1 / 2;\n  }\n\n  main {\n    background: coral;\n    grid-column: 2 / 3;\n  }\n\n  .right-sidebar {\n    background: yellow;\n    grid-column: 3 / 4;\n  }\n\n  footer {\n    background: wheat;\n    padding: 2rem;\n    text-align: center;\n    grid-column: 1 / 4;\n  }\n\n  .left-sidebar,\n  .right-sidebar,\n  main {\n    padding: 1rem;\n  }\n}\n")])])]),a("p",[t._v("结构代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    \x3c!-- 圣杯布局 --\x3e\n    <div class="wrapper">\n      <header>\n        <h1>Header</h1>\n      </header>\n      <div class="left-sidebar">Left Sidebar</div>\n      <main>Main</main>\n      <div class="right-sidebar">Right Sidebar</div>\n      <footer>Footer</footer>\n    </div>\n')])])]),a("p",[t._v("动图效果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/af24137ce5e2f61fe6022252ede3d4ba.gif",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"grid布局制作3d骰子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid布局制作3d骰子"}},[t._v("#")]),t._v(" grid布局制作3D骰子")]),t._v(" "),a("h2",{attrs:{id:"_1-实现筛子的基本结构样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-实现筛子的基本结构样式"}},[t._v("#")]),t._v(" 1.实现筛子的基本结构样式")]),t._v(" "),a("p",[t._v("根据日常观察骰子，先来定义骰子六个面及每个面上的点的结构")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    <div class="dice-box">\n      <div class="dice first-face">\n        <span class="dot"></span>\n      </div>\n      <div class="dice second-face">\n        <span class="dot"></span>\n        <span class="dot"></span>\n      </div>\n      <div class="dice third-face">\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n      </div>\n      <div class="dice fourth-face">\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n      </div>\n      <div class="fifth-face dice">\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n      </div>\n      <div class="dice sixth-face">\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n        <span class="dot"></span>\n      </div>\n    </div>\n')])])]),a("p",[t._v("骰子每个面其实可以想象成一个 3 x 3 的网格，其中每个单元格代表一个点的位置：")]),t._v(" "),a("blockquote",[a("p",[t._v("+---+---+---+"),a("br"),t._v("\n| a | b | c |"),a("br"),t._v("\n+---+---+---+"),a("br"),t._v("\n| d | e | f |"),a("br"),t._v("\n+---+---+---+"),a("br"),t._v("\n| g | h | i |"),a("br"),t._v("\n+---+---+---+")])]),t._v(" "),a("p",[t._v("要创建一个 3 x 3 的网格，只需要设置一个容器元素，并且设置三个大小相同的行和列：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dice {\n display: grid;\n  grid-template: repeat(3, 1fr) / repeat(3, 1fr);\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/4950364708bdc9a7c1e68496af273cdf.png",alt:""}})]),t._v(" "),a("p",[t._v("经过分析布局不是单元格上的每个点都能用到，把不用的点的位置用.代替")]),t._v(" "),a("blockquote",[a("p",[t._v("+---+---+---+"),a("br"),t._v("\n| a | . | c |"),a("br"),t._v("\n+---+---+---+"),a("br"),t._v("\n| d | e | f |"),a("br"),t._v("\n+---+---+---+"),a("br"),t._v("\n| g | . | i |"),a("br"),t._v("\n+---+---+---+")])]),t._v(" "),a("p",[t._v("我们可以使用grid-template-areas属性将此布局转换为 CSS：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('grid-template-areas:\n    "a . c"\n    "d e f"\n    "g . i";\n')])])]),a("p",[t._v("因此，我们可以不使用传统的单位来调整行和列的大小，而只需使用名称来引用每个单元格。其语法本身提供了网格结构的可视化，名称由网格项的网格区域属性定义。中间列中的点表示一个空单元格。")]),t._v(" "),a("p",[t._v("下面来使用grid-area属性为网格项命名，然后，网格模板可以通过其名称引用该项目，以将其放置在网格中的特定区域中。:nth-child()伪选择器允许单独定位每个点。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dot:nth-child(1) {\n  grid-area: a;\n}\n\n.dot:nth-child(2) {\n  grid-area: i;\n  \n}\n\n.dot:nth-child(3) {\n  grid-area: c;\n}\n\n.dot:nth-child(4) {\n  grid-area: g;\n  \n}\n\n.dot:nth-child(5) {\n  grid-area: d;\n  \n}\n\n.dot:nth-child(6) {\n  grid-area: f;\n}\n")])])]),a("p",[t._v("现在六个面的样式如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/a5ce821419aef4d7ab1d6d0a5f020b4f.png",alt:""}})]),t._v(" "),a("p",[t._v("可以看到，1、3、5的布局仍然是不正确的，只需要重新定位每个骰子的最后一个点即可：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dot:nth-child(odd):last-child {\n  //奇数行的最后一个元素\n  grid-area: e;\n\n}\n")])])]),a("p",[t._v("这时所有点的位置都正确了：")]),t._v(" "),a("p",[t._v("为了更明显，把最后摆正的点用黄色填充背景")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/c7a2877932b3ccfdd0c1da979bad99c1.png",alt:""}})]),t._v(" "),a("p",[t._v("然后下面为每个面和点的基本样式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n.dice {\n  width: 200px;\n  height: 200px;\n  padding: 20px;\n  background-color: lightskyblue;\n  box-sizing: border-box;\n  opacity: 0.7;\n \n display: grid;\n  grid-template: repeat(3, 1fr) / repeat(3, 1fr);\n  grid-template-areas:\n    "a . c"\n    "d e f"\n    "g . i";\n\n}\n\n.dot {\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: white;\n}\n.dot:nth-child(1) {\n  grid-area: a;\n}\n\n.dot:nth-child(2) {\n  grid-area: i;\n  \n}\n\n.dot:nth-child(3) {\n  grid-area: c;\n}\n\n.dot:nth-child(4) {\n  grid-area: g;\n  \n}\n\n.dot:nth-child(5) {\n  grid-area: d;\n  \n}\n\n.dot:nth-child(6) {\n  grid-area: f;\n}\n')])])]),a("h2",{attrs:{id:"​2-实现-3d-骰子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#​2-实现-3d-骰子"}},[t._v("#")]),t._v(" "),a("strong",[t._v("​2. 实现 3d 骰子")])]),t._v(" "),a("p",[t._v("上面我们使用了grid 布局实现了骰子的六个面，下面来这将六个面组合成一个正方体。")]),t._v(" "),a("p",[t._v("首先对六个面进行一些样式修改：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dice {\n  width: 200px; \n  height: 200px; \n  padding: 20px;\n  box-sizing: border-box;\n  opacity: 0.7;\n  background-color: lightskyblue;\n  position: absolute;\n}\n")])])]),a("p",[t._v("定义它们的父元素：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".dice-box {\n  width: 200px;\n  height: 200px;\n  position: relative;\n  transform-style: preserve-3d;\n  transform: rotateY(185deg) rotateX(150deg) rotateZ(315deg);\n}\n")])])]),a("p",[t._v("其中，transform-style: preserve-3d;表示所有子元素在3D空间中呈现。这里的transform 的角度不重要，主要是便于后面查看。")]),t._v(" "),a("p",[t._v("此时效果为：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/f14de8ff4e730ed92b48cfea6653e987.png",alt:""}})]),t._v(" "),a("p",[t._v("看起来有点奇怪，所有面都叠加在一起。不要急，我们来一个个调整位置。")]),t._v(" "),a("p",[t._v("首先将第一个面在 Z 轴移动 100px：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  .first-face {\n  transform: translateZ(100px);\n}\n")])])]),a("p",[t._v("第一面就到了所有面的上方：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/01e98c02da489e78f291aa4b2cfb8925.png",alt:""}})]),t._v(" "),a("p",[t._v("因为每个面的宽高都是 200px，所以将第六面沿 Z 轴向下调整 100px：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".sixth-face {\n  transform: translateZ(-100px);\n}\n")])])]),a("p",[t._v("第六面就到了所有面的下方：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/db76282abf9087626d62354063d271cf.png",alt:""}})]),t._v(" "),a("p",[t._v("下面来调整第二面，将其在X轴向后移动 100px，并沿着 Y 轴旋转 -90 度：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n.second-face {\n  transform: translateX(-100px) rotateY(-90deg);\n}\n")])])]),a("p",[t._v("此时六个面是这样的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/2e37d2b94e9396b1f0d9b2314cdb5488.png",alt:""}}),a("br"),t._v("\n下面来调整第二面的对面：第五面，将其沿 X 轴的正方向移动 100px，并沿着 Y 轴方向选择 90 度：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".fifth-face {\n  transform: translateX(100px) rotateY(90deg);\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/d934fdc24819c7f6c5e1879a240e48c5.png",alt:""}})]),t._v(" "),a("p",[t._v("下面来调整第三面，道理同上：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("third-face {\n  transform: translateY(100px) rotateX(90deg);\n}\n")])])]),a("p",[t._v("此时六个面是这样的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/6ecdc84dde8ca76aec62937c91b9a035.png",alt:""}}),a("br"),t._v("\n最后来调整第四面：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".fourth-face {\n  transform: translateY(-100px) rotateX(90deg);\n}\n")])])]),a("p",[t._v("此时六个面为")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/65966317f61d20b234656c1559ca94cb.png",alt:""}})]),t._v(" "),a("p",[t._v("下面来为这个骰子设置一个动画，让它转起来：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@keyframes rotate {\n  from {\n    transform: rotateY(0) rotateX(45deg) rotateZ(45deg);\n  }\n  to {\n    transform: rotateY(360deg) rotateX(45deg) rotateZ(45deg);\n  }\n}\n \n.dice-box {\n  animation: rotate 5s linear infinite;\n}\n")])])]),a("p",[t._v("最终的效果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/10/528af40756925aba4fc65e4e0260bd22.gif",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"与flex布局的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与flex布局的区别"}},[t._v("#")]),t._v(" 与flex布局的区别")]),t._v(" "),a("p",[t._v("grid 布局与 "),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[a("u",[t._v("Flex 布局")]),a("OutboundLink")],1),t._v("有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("grid 主要是"),a("strong",[t._v("在父元素上")]),t._v("定义的。在 flexbox 中，大部分布局（除了最基本的）都发生"),a("strong",[t._v("在 children 上")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v('Flex 布局是轴线布局，只能指定"项目"针对轴线的位置，可以看作是'),a("strong",[t._v("一维布局")]),t._v('。grid 布局则是将容器划分成"行"和"列"，产生单元格，然后指定"项目所在"的单元格，可以看作是'),a("strong",[t._v("二维布局")]),t._v("。grid 布局远比 Flex 布局强大。")])]),t._v(" "),a("li",[a("p",[t._v("grid 可以做Flexbox做不了的事，Flexbox 可以做 grid 做不了的事，他们可以共同工作。grid item可以成为flexbox容器，flex item可以成为grid 容器。")])])]),t._v(" "),a("p",[t._v("综上所述，可以根据业务场景需要选择相应布局。")]),t._v(" "),a("p",[a("code",[t._v("grid布局")]),t._v(" 和 "),a("code",[t._v("flex弹性布局")]),t._v(" 一样，都是当下最流行的CSS布局方案之一。它的优点是可以实现多行多列的布局，属于 "),a("code",[t._v("二维布局")]),t._v(" ，基本可以满足任何的布局页面。")]),t._v(" "),a("h1",{attrs:{id:"grid布局总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid布局总结"}},[t._v("#")]),t._v(" grid布局总结")]),t._v(" "),a("h2",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ul",[a("li",[t._v("固定和灵活的轨道尺寸")]),t._v(" "),a("li",[t._v("可以使用行号、名称或通过定位网格区域将项目放置在网格上的精确位置")]),t._v(" "),a("li",[t._v("可以将多个项目放入网格单元格或区域中，它们可以彼此部分重叠")])]),t._v(" "),a("h2",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ul",[a("li",[t._v("浏览器兼容性较差")]),t._v(" "),a("li",[t._v("学习成本较高")])]),t._v(" "),a("p",[a("code",[t._v("grid布局")]),t._v(" 可以说是目前最强大的CSS布局方案之一，在实际开发过程中，往往 "),a("code",[t._v("grid布局")]),t._v(" 和 "),a("code",[t._v("flex布局")]),t._v(" 一起结合使用")]),t._v(" "),a("h1",{attrs:{id:"网站推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网站推荐"}},[t._v("#")]),t._v(" 网站推荐")]),t._v(" "),a("ol",[a("li",[t._v("前端grid网格布局小游戏网址"),a("a",{attrs:{href:"https://cssgridgarden.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cssgridgarden.com/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("grid布局的一些例子"),a("a",{attrs:{href:"https://gridbyexample.com/examples/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gridbyexample.com/examples/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("flex布局与grid布局对比实现的布局样式："),a("a",{attrs:{href:"https://www.gridtoflex.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.gridtoflex.com/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("网格布局生成器"),a("a",{attrs:{href:"https://grid.layoutit.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://grid.layoutit.com/"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);