(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{316:function(t,e,r){"use strict";r.r(e);var a=r(14),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("上次技术分享我们知道了操作系统的形成是有其历史原因的，内存其实可以看作一个二维数组。接下来我们来看一下操作系统的启动流程。")]),t._v(" "),e("h1",{attrs:{id:"linux-操作系统启动流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-操作系统启动流程"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Linux 操作系统启动流程")])]),t._v(" "),e("blockquote",[e("h5",{attrs:{id:"cpu-reset-firmware-loader-kernel-start-一-第一个程序-bin-init-一-程序-状态机-执行-系统调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu-reset-firmware-loader-kernel-start-一-第一个程序-bin-init-一-程序-状态机-执行-系统调用"}},[t._v("#")]),t._v(" "),e("strong",[t._v("CPU Reset - Firmware - Loader - Kernel_start() 一 第一个程序/bin/init 一 程序(状态机)执行＋系统调用")])])]),t._v(" "),e("h1",{attrs:{id:"cpu-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu-reset"}},[t._v("#")]),t._v(" CPU Reset")]),t._v(" "),e("p",[t._v("在按下开机键后，电源接通，计算机加电，在开机启动的时候，"),e("strong",[t._v("计算机首先工作在实模式（16位寻址模式）")]),t._v("，"),e("strong",[t._v("硬件电路")]),t._v("会"),e("strong",[t._v("初始化设置PC寄存器的值")]),t._v("。(程序计数器 Program Counter，即程序指令的要执行位置， 是一种通用寄存器，但是有特殊用途，用来指向当前运行指令的下一条指令)，如IBM的硬件电路将这个"),e("strong",[t._v("PC寄存器的初始值设置为0xFFFF0 地址,")]),t._v(" 将这个地址放到地址总线上去，以取出内存中存放的指令，即0xFFFF0 地址处取出第一条指令开始执行。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/6/cdf8e3dad9778eb5d46cf9cc1294df45.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/6/93231264762366401a98a4e19859e473.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("**注意：**这个时候并不是操作系统在主导。计算机有软件和硬件部分，为了让计算机能运行任何我们的程序，"),e("strong",[t._v("存在软件 / 硬件的约定")]),t._v("。CPU reset后，处理器处于某个确定的状态，PC指针一般指向一段 memory-mapped ROM，ROM存储了厂商提供的firmware(固件)，处理器的大部分特性处于关闭状态。缓存、虚拟存储、.….Firmware(固件，厂商提供的代码)，将用户数据加载到内存")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CPU Reset(Intel®64 and IA-32Architectures Software Developer's Manual,Volume 3A/3B)"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/9/ee22b94d4f0e0c8a41ae2fc581c63ed5.png",alt:""}})]),t._v(" "),e("p",[t._v("也就是后四位都是0，PE=0 实模式，完全用物理地址。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/9/0ff0b1be369aec5caebf8a6c763a2693.png",alt:""}})]),t._v(" "),e("p",[t._v("计算机厂商会统一规范将规则写成手册，只有遵循这样的规则才能进行调用。可以看到寄存器会有初始状态，EIP=0x0000fff0，CR0=0x60000010，16-bit模式，EFLAGS=0x00000002，interrupt disabled。")]),t._v(" "),e("p",[e("strong",[t._v("那么内存地址 0xFFFF0 上取出的指令是什么？")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("RAM 和 ROM")])]),t._v(" "),e("p",[t._v("内存是随机存储器（random access messory, RAM),属于易失性存储器，故未加电时RAM中没有存放任何内容，因此一上电时RAM中没有任何信息的。")]),t._v(" "),e("p",[t._v("只读存储器（Read-Only Memory，ROM）以非破坏性读出方式工作，只能读出无法写入信息。"),e("strong",[t._v("信息一旦写入后就固定下来")]),t._v("，即使切断电源，信息也不会丢失，所以又称为固定存储器。"),e("strong",[t._v("ROM所存数据通常是装入整机前写入的")]),t._v("。")])]),t._v(" "),e("p",[t._v("为了"),e("strong",[t._v("设置一个起点，"),e("strong",[t._v("计算机硬件厂商在只读存储器（read-only memory , ROM)中开辟一块空间，x86 的0xFFFF0 就指向这个区域，这段")]),t._v("ROM就被称为BIOS")]),t._v("（basic input/output system，基本输入输出系统），"),e("strong",[t._v("BIOS里面放了对基本硬件的测试代码，如对主板，内存等硬件的测试，同时还提供一些让用户调用硬件基本输入输出功能的子程序，如int 0x0(BIOS中断)。")])]),t._v(" "),e("h1",{attrs:{id:"firmware-bios-uefi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firmware-bios-uefi"}},[t._v("#")]),t._v(" Firmware (BIOS, UEFI)")]),t._v(" "),e("p",[e("strong",[t._v("CPU从0xFFFF0 指向 的这段ROM中取出的指令要做的工作是测试各种硬件是否正常")]),t._v("，如果出现异常则停止启动（如SSD坏了啦，电脑就会卡那不动或者反复重启），如果检测正常，则利用BIOS的输入功能将启动磁盘上启动扇区中的内容读到内存0x7C00的地址处，并设置PC寄存器的地址为0x7C00。")]),t._v(" "),e("p",[t._v("除了测试硬件是否正常，它还支持系统管理程序运行（提供打印，读写字符的基本操作的系统调用）。")]),t._v(" "),e("p",[e("strong",[t._v("怎么看它是不是启动的磁盘呢？")])]),t._v(" "),e("p",[t._v("它去读，每个磁盘的第一个扇区，会看最后两个byte 是什么，如果有读到55aa，0X55aa就停下。（windows的磁盘驱动器是从 c 开始编号的，那么a和b是什么，是软盘。）")]),t._v(" "),e("h1",{attrs:{id:"kernel-start"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kernel-start"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Kernel_start()")])]),t._v(" "),e("p",[t._v("因为PC中的地址已经设置为0x7C00, 接下来就要到该内存地址下执行指令了，该地址下放的是刚才读取的启动扇区的内容（就是启动磁盘上的0号柱面，0号磁头，1号扇区，共512个字节），"),e("strong",[t._v("操作系统第一个要编写的文件就是这个引导扇区中存放的程序代码")]),t._v("，通常将其命名为bootsect.s（是一个汇编文件）")]),t._v(" "),e("p",[t._v("如果没有指定启动选项 init = ，按照默认列表尝试一遍，"),e("strong",[t._v("如果所有程序都找不到，拒绝启动。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.uinosoft.cn/files/image/2022/6/12e2f0fe861b105a664688dab7fb43de.png",alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("从此以后，Linux Kernel就进入后台，成为“中断/异常处理程序”")])]),t._v(" "),e("h1",{attrs:{id:"操作系统也是程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作系统也是程序"}},[t._v("#")]),t._v(" "),e("strong",[t._v("操作系统也是程序")])]),t._v(" "),e("p",[e("strong",[t._v("操作系统是计算机启动之后执行第一个程序。"),e("strong",[t._v("它也是中断处理程序，我们看到的所有东西都是第一个初始化程序创造的")]),t._v("子孙后代")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("如果起始代码是Hello world，那么我们今天看到的就只是Hello world。如果启动的是一个操作系统，那么它就可以创造更多的程序。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.uinosoft.cn/files/image/2022/6/e272f30cc2646324a66c828921018ef5.png",alt:""}})]),t._v(" "),e("p",[t._v("操作系统会加载“第一个程序”，创建了“树根”上的第一个进程。剩下所有进程都是由“树根”创建的。操作系统封装了一些系统硬件的调用，从而让人们更方便的去调用。程序利用各种各样的系统调用，复制进程，重置进程，销毁进程。")]),t._v(" "),e("h1",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://pan.udolphin.com/files/image/2022/9/03529992e1f5726c7702ca389dceec68.jpg",alt:""}})])])}),[],!1,null,null,null);e.default=s.exports}}]);