(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{293:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在这篇文章中，我将会介绍 Svelte 框架的特性、优缺点和底层原理。")]),t._v(" "),s("blockquote",[s("p",[t._v("本文尽量不会涉及 Svelte 的语法，大家可以放心食用。因为 Svelte 的语法极其简单，而且官方教程学习曲线平缓"),s("a",{attrs:{href:"https://www.sveltejs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.sveltejs.cn/"),s("OutboundLink")],1),t._v("，相信大家很快就会上手语法的，这里就不做官网搬运工了。")])]),t._v(" "),s("p",[t._v("前端领域迅速发展，各种轮子(框架)层出不穷。最近这些年，随着三大框架React、Vue、Angular版本逐渐稳定，前端技术栈的迭代似乎缓慢下来，React 16版本推出了 Fiber， Vue 3.0 也已经正式发布。如果我们把目光拉伸到未来十年的视角，前端行业会出现哪些框架有可能会挑战React或者Vue呢？ 我认为，崭露头角的 Svelte 应该是其中的选项之一。")]),t._v(" "),s("h2",{attrs:{id:"svelte-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svelte-简介"}},[t._v("#")]),t._v(" Svelte 简介")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/f276cc1bfaf7c1a33defc235997072b3.png",alt:"image.png"}}),t._v(" "),s("code",[t._v("Svelte")]),t._v("叫法是"),s("code",[t._v("[Svelt]")]),t._v(", 本意是苗条纤瘦的，是一个新兴热门的前端框架。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/bf2c7bb8f7187085be0f97da22fa8677.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"作者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作者"}},[t._v("#")]),t._v(" 作者")]),t._v(" "),s("p",[t._v("Svelte 作者是前端轮子哥 Rich Harris，同时也是 Rollup 的作者。Rich Harris 作者本人在介绍 Svelte 时，有一个非常精彩的演讲《Rethinking reactivity》，"),s("a",{attrs:{href:"https://www.youtube.com/watch?v=AdNJ3fydeao&t=1900s",target:"_blank",rel:"noopener noreferrer"}},[t._v("油管链接"),s("OutboundLink")],1),t._v(" ，感兴趣的同学不要错过。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/6dcc3a4e43fd7a239ddddcf8b4bf6a09.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"核心思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心思想"}},[t._v("#")]),t._v(" 核心思想")]),t._v(" "),s("p",[t._v("他设计 Svelte 的核心思想在于『通过静态编译减少框架运行时的代码量』，也就是说，Vue 和 React 这类传统的框架，都必须引入运行时 (Runtime) 代码，用于虚拟DOM、Diff 算法。Svelte完全溶入JavaScript，应用所有需要的运行时代码都包含在bundle.js里面了，除了引入这个组件本身，你不需要再额外引入一个运行代码。")]),t._v(" "),s("p",[t._v("Svelte 的使用非常灵活，你可以在整个项目的使用Svelte 整个的构建体系，也可以渐进地将 Svelte添加到您的代码中，还可以将 Svelte 组件作为独立的 npm 包发布。")]),t._v(" "),s("h3",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/c8213b82b7f8094f5ed1492e3d40adb9.png",alt:"image.png"}})]),t._v(" "),s("ul",[s("li",[t._v("用最基本的 HTML,CSS,JavaScript 来写代码")]),t._v(" "),s("li",[t._v("基于Compiler as framework的理念，会在编译的时候将你的应用转换为原生的DOM操作")]),t._v(" "),s("li",[t._v("没有Virtual DOM")]),t._v(" "),s("li",[t._v("极其容易的应用全局状态管理，框架本身自带全局状态，类似于React的Redux和Vue的Vuex")]),t._v(" "),s("li",[t._v("原生支持CSS scope和CSS animate")]),t._v(" "),s("li",[t._v("支持context，避免组件的props drilling")])]),t._v(" "),s("p",[t._v("在最新的"),s("a",{attrs:{href:"https://2020.stateofjs.com/en-US/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《State of JS survey of 2020》"),s("OutboundLink")],1),t._v("中，它被预测为未来十年可能取代React和Vue等其他框架的新兴技术。如果你不确定自己是否该了解 Svelte，可以先看一下 Svelte 的一些发展趋势。")]),t._v(" "),s("h2",{attrs:{id:"发展趋势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发展趋势"}},[t._v("#")]),t._v(" 发展趋势")]),t._v(" "),s("h3",{attrs:{id:"开发者满意度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发者满意度"}},[t._v("#")]),t._v(" 开发者满意度")]),t._v(" "),s("p",[t._v("从2019年开始, Svelte出现在榜单中。刚刚过去的2020年，Svelte在满意度排行榜中超越了React，跃升到了第一位。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/11089c63019019ad09848af1bc56f79a.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"开发者兴趣度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发者兴趣度"}},[t._v("#")]),t._v(" 开发者兴趣度")]),t._v(" "),s("p",[t._v("在开发者兴趣度方面，Svelte 蝉联了第一。"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/18b389ebf305c57481b52afe60173c2d.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"市场占有率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#市场占有率"}},[t._v("#")]),t._v(" 市场占有率")]),t._v(" "),s("p",[t._v("当然，如果你还没有听说过，也不用紧张，因为Svelte 目前仍是小众的开发框架，在社区里仍然没有流行开来。24.7% 的开发者没有听说过这款框架，有 44.9% 的开发者听说过，并且愿意接下来尝试使用。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/dbf2da341035444812ac0deecfa8c8d1.png",alt:"image.png"}}),t._v("\n从框架使用的公司规模来看，Svelte 目前在大公司使用率不高，可能和 Svelte 目前生态环境和周边欠缺有关。Svelte 在小公司中使用率比较高，可能和容易上手有关\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/d99de2d63e7077401c13679b328cd26c.png",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"svelte-优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svelte-优势"}},[t._v("#")]),t._v(" Svelte 优势")]),t._v(" "),s("h3",{attrs:{id:"no-runtime-无运行时代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-runtime-无运行时代码"}},[t._v("#")]),t._v(" No Runtime — 无运行时代码")]),t._v(" "),s("p",[t._v("上文说了，React 和 Vue都是基于运行时"),s("strong",[t._v("Runtime")]),t._v("的框架，框架本身所依赖的代码也会被打包到最终的构建产物中，当用户在你的页面进行各种操作改变组件的状态时，框架的"),s("strong",[t._v("Runtime")]),t._v("会根据新的组件状态（state）计算（Diff）出哪些DOM节点需要被更新，从而更新视图。")]),t._v(" "),s("p",[t._v("这就意味着，框架本身所依赖的代码也会被打包到最终的构建产物中。这就不可避免增加了打包后的体积，那么这部分体积大约是多少呢？请看下面的数据：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Size")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Ember  2.2.0")]),t._v(" "),s("td",[t._v("435K")])]),t._v(" "),s("tr",[s("td",[t._v("Ember 1.13.8")]),t._v(" "),s("td",[t._v("486K")])]),t._v(" "),s("tr",[s("td",[t._v("Angular 2")]),t._v(" "),s("td",[t._v("566K")])]),t._v(" "),s("tr",[s("td",[t._v("Angular 2 + Rx")]),t._v(" "),s("td",[t._v("766K")])]),t._v(" "),s("tr",[s("td",[t._v("Angular 1.4.5")]),t._v(" "),s("td",[t._v("143K")])]),t._v(" "),s("tr",[s("td",[t._v("Vue 2.4.2")]),t._v(" "),s("td",[t._v("58.8K")])]),t._v(" "),s("tr",[s("td",[t._v("Inferno 1.2.2")]),t._v(" "),s("td",[t._v("48K")])]),t._v(" "),s("tr",[s("td",[t._v("Preact 7.2.0")]),t._v(" "),s("td",[t._v("16K")])]),t._v(" "),s("tr",[s("td",[t._v("React 0.14.5 + React DOM")]),t._v(" "),s("td",[t._v("133K")])]),t._v(" "),s("tr",[s("td",[t._v("React 0.14.5 + React DOM  + Redux")]),t._v(" "),s("td",[t._v("139K")])]),t._v(" "),s("tr",[s("td",[t._v("React 16.2.0 + React DOM")]),t._v(" "),s("td",[t._v("97.5K")])])])]),t._v(" "),s("p",[t._v("从上面的表格可以看出，常用的框架中，最小的Vue都有58K，React更有97.5K，这个体积说实话，是有一点大的。假设我们使用React开发一个小型组件SDK，即使里面的逻辑代码很简单，但是打包出来的bundle size轻轻松松都要100K起步。当然100K相对于一些大型的管理系统来说，只是小巫见大巫，但是对于那些首屏加载时间很敏感的应用（例如淘宝，京东），100K在一些网络不好的情况下会影响用户体验，所以想要减少框架的Runtime大小，那就是压根不用Runtime。大家回想一下，早在jQuery和BootStrap大行其道的时代，我们的代码不就是不包含Runtime的吗？当数据变化时，直接通过JS去改变原生DOM节点，没有框架一系列Diff和Fiber。 那Svelte将框架的概念放在了编译时而不是运行时，Svelte编写的代码可以通过webpack或者Rollup等打包工具，在打包的时候直接转换成js对DOM节点的原生操作，从而让bundle不包含框架的Runtime代码。")]),t._v(" "),s("p",[t._v("因为生成的组件没有Runtime，没有额外的依赖，所以所有组件都可以单独使用，可以无缝地在React、Vue或Angular等其他框架里直接import。")]),t._v(" "),s("p",[t._v("下面是 Jacek Schae 大神的统计，使用市面上主流的框架，来编写同样的"),s("a",{attrs:{href:"https://realworld.svelte.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Realworld"),s("OutboundLink")],1),t._v(" 应用：\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/6fd4850f47b2c56699d3b8453a43f6e0.png",alt:"image.png"}}),t._v("\n从上图的统计，Svelte简直是神奇！竟然只有 9.7 KB !\n可以看出，Svelte的bundle size大小是Vue的1/4，是React的1/20。")]),t._v(" "),s("p",[t._v("但是它并不是说完全没有运行时，对于一些特定的功能，像组件的一些逻辑切换（if/else），循环逻辑等等，它是在运行时的，只是在编译的时候，没有被用到的代码功能不会被打包进最终的bundle里，这就好像你用babel，helper是不会被引入的，用lodash或者RxJS只会选择性的引入对应的代码，所以这就极致的减少了打包后的体积。")]),t._v(" "),s("h3",{attrs:{id:"less-code-写更少的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#less-code-写更少的代码"}},[t._v("#")]),t._v(" Less-Code —写更少的代码")]),t._v(" "),s("p",[t._v("在写Svelte组件时，你就会发现，和 Vue 或 React 相比只需要更少的代码。开发者的梦想之一，就是敲更少的代码。更少的源码意味着Bug少，同时也有助于维护，阅读。")]),t._v(" "),s("p",[t._v("下面的例子，可以看出Svelte和React/Vue的不同：\nReact 的代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("Vue3的代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("increment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("Svelte的代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("在React/Vue中，我们要么使用钩子，要么使用setState设置状态。而在Svelte中，可以直接使用赋值操作符更新状态。")]),t._v(" "),s("p",[t._v("如果说上面的例子太简单了，可以看下面的统计，分别使用 React /Vue/ Svelte 编写同样的"),s("a",{attrs:{href:"https://realworld.svelte.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Realworld"),s("OutboundLink")],1),t._v(" 应用，各个框架所需要的行数。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/5b02fdef14f2d266938e5e42d5fe505a.png",alt:"image.png"}}),t._v("\nVue 和 React 打了平手，Svelte 遥遥领先，可以少写 1000 行代码")]),t._v(" "),s("h3",{attrs:{id:"hight-performance-高性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hight-performance-高性能"}},[t._v("#")]),t._v(" Hight-Performance —高性能")]),t._v(" "),s("p",[t._v("在Virtual DOM已经是前端框架标配的今天， Svelte 声称自己是没有Virtual DOM加持的， 怎么还能保证高性能呢？")]),t._v(" "),s("h4",{attrs:{id:"性能测评"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能测评"}},[t._v("#")]),t._v(" 性能测评")]),t._v(" "),s("p",[s("strong",[t._v("Jacek Schae "),s("strong",[t._v("在"),s("a",{attrs:{href:"https://www.freecodecamp.org/news/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《A RealWorld Comparison of Front-End Frameworks with Benchmarks》"),s("OutboundLink")],1),t._v("中用主流的前端框架来编写 "),s("a",{attrs:{href:"https://realworld.svelte.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Realworld"),s("OutboundLink")],1),t._v(" 应用，使用 Chrome 的Lighthouse Audit测试性能，得出数据是")]),t._v("Svelte")]),t._v(" 略逊于"),s("strong",[t._v("Vue")]),t._v(", 但好于 "),s("strong",[t._v("React")]),t._v("。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/7c67e6dbf69e340d1fff154de27638ba.png",alt:"image.png"}}),t._v("\n所以为什么Svelte的性能看上去还不错！！！")]),t._v(" "),s("h4",{attrs:{id:"virtual-dom-真的高效吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom-真的高效吗"}},[t._v("#")]),t._v(" Virtual DOM 真的高效吗")]),t._v(" "),s("p",[t._v("Rich Harris 不用 Virtual DOM 是因为觉得Virtual DOM Diff 的过程是非常低效的。")]),t._v(" "),s("p",[t._v("在他的一文"),s("a",{attrs:{href:"https://www.sveltejs.cn/blog/virtual-dom-is-pure-overhead",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Virtual DOM is pure overhead》"),s("OutboundLink")],1),t._v("有介绍，感兴趣的同学可以翻一下。")]),t._v(" "),s("p",[t._v("首先，Virtual DOM高效是一个误解，React 从来没有说过它的 Virtual DOM 性能很好，有的人会说Virtual DOM高效的一个理由就是它不会直接操作原生的DOM节点，因为这个很消耗性能。\n当组件状态变化时它会通过某些Diff算法去计算出本次数据更新真实的视图变化，然后只改变“需要改变”的DOM节点。用过React的人可能都会体会到React并没有想象中那么高效，框架有时候会做很多无用功，这体现在很多组件会被“无缘无故”进行重渲染（re-render），特别是在用了 Redux 后，这个现象会愈发明显。")]),t._v(" "),s("p",[t._v("所谓的re-render是你定义的class Component的render方法被重新执行，或者你的组件函数被重新执行，并不是说原生DOM被重新渲染。组件被重渲染是因为Vitual DOM的高效是建立在Diff算法上的，而如果要有Diff，则一定要将组件重渲染才能知道组件的新状态和旧状态有没有发生改变，从而才能计算出哪些DOM需要被更新。")]),t._v(" "),s("p",[t._v("可能有的朋友会说React Fiber不是出来了吗？其实Fiber这个架构解决的问题是不让组件的重渲染和reconcile的过程阻塞主线程的执行，组件重渲染的问题依然存在，而且据反馈，React Hooks出来后组件的重渲染更加频繁了。正是因为框架本身很难避免无用的渲染，React才允许你使用一些诸如shouldComponentUpdat、PureComponent和useMemo的API去告诉框架哪些组件不需要被重渲染，可是这会引入了很多模板代码（boilerplate）。")]),t._v(" "),s("p",[t._v("这里引申讲下Virtual DOM的开销在哪里， 这和它必不可少的3个步骤有关（以更新某个元素的text值为例）：")]),t._v(" "),s("ol",[s("li",[t._v("调用render函数生成一颗新的Virtual DOM tree")]),t._v(" "),s("li",[t._v("遍历元素上的新属性和旧属性，查看是否需要添加/删除/更新属性")]),t._v(" "),s("li",[t._v("访问到此元素，然后发现text值需要被更新，则更新")])]),t._v(" "),s("p",[t._v("具体代码实例如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MoreRealisticComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("selected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setSelected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Selected "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("selected "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" selected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nothing'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSelected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("这里 props.items 这个数据，只要state发生了变化，我们都会重新生成一堆虚拟的 li ，这是毫无意义的，这些琐屑的操作累加起来，最终对性能会造成影响，如果你想要更快的话，一个比较好的做法就是去除这些多余的操作。")]),t._v(" "),s("h4",{attrs:{id:"那么-svelte-是如何解决这个问题的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那么-svelte-是如何解决这个问题的"}},[t._v("#")]),t._v(" 那么 Svelte 是如何解决这个问题的？")]),t._v(" "),s("p",[t._v("React 采用 JSX 语法本质不理解数据代表的意义，没有办法做出优化。")]),t._v(" "),s("p",[t._v("Svelte 采用了 "),s("strong",[t._v("Templates")]),t._v(" 语法（类似于 Vue 的写法），更加严格和具有语义性，可以在编译的过程中就进行优化操作。")]),t._v(" "),s("p",[t._v("那么，为什么 "),s("strong",[t._v("Templates")]),t._v(" 语法可以解决这个问题呢？")]),t._v(" "),s("h4",{attrs:{id:"template-带来的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template-带来的优势"}},[t._v("#")]),t._v(" Template 带来的优势")]),t._v(" "),s("p",[t._v("关于 JSX 与 Templates ，可以看成是两种不同的前端框架渲染机制，有兴趣的同学可以翻一下尤雨溪的演讲"),s("a",{attrs:{href:"https://www.bilibili.com/video/av80042358/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《在框架设计中寻求平衡》"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"jsx-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx-优缺点"}},[t._v("#")]),t._v(" JSX 优缺点")]),t._v(" "),s("p",[t._v("JSX 具有 JavaScript 的完整表现力，可以构建非常复杂的组件。")]),t._v(" "),s("p",[t._v("但是灵活的语法，也意味着引擎难以理解，无法预判开发者的用户意图，从而难以优化性能。我们看下下面的代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" children "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lorum ipsum'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("在使用 JavaScript 的时候，编译器不可能hold住所有可能发生的事情，因为 JavaScript 太过于动态化。也有人对这块做了很多尝试，但从本质上来说很难提供安全的优化。")]),t._v(" "),s("p",[t._v("所以，React 选择的优化思路是，引入了运行时调度并发时间切片的概念，不减少渲染的工作量，而是让用户“看上去” 不会卡。")]),t._v(" "),s("h5",{attrs:{id:"template优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template优缺点"}},[t._v("#")]),t._v(" Template优缺点")]),t._v(" "),s("p",[t._v("根据定义，模板是一种非常有约束的语言，你只能以某种方式去编写模板。")]),t._v(" "),s("p",[t._v("例如，当你写出这样的代码的时候，编译器可以立刻明白："),s("strong",[t._v("”哦！这些 p 标签的顺序是不会变的，这个 id 是不会变的，这些 class 也不会变的，唯一会变的就是这个message“")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Losum Ipsum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Losum Ipsum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Losum Ipsum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Losum Ipsum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("p",[t._v("在编译时，编译器对你的意图可以做更多的预判，从而给它更多的空间去做执行优化。")]),t._v(" "),s("p",[t._v("我们来看看 Svelte 编译代码时，会把模板编译成直接可执行的JavaScript 代码。\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/8bcb9b866162ce2d21fc4129e10f4719.png",alt:"image.png"}}),t._v("\n左侧 template 中，其他所有内容都是静态的，只有 name 可能会发生改变。")]),t._v(" "),s("p",[t._v("右侧 p 函数是编译生成的最终的产物，会在有脏数据时被调用。p 函数唯一做的事情就是，当 name 发生变更的时候，调用原生方法把 t1 这个原生DOM节点更新。")]),t._v(" "),s("h5",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("回到最初的问题， 我们就想知道 Svelte 与 VDOM Diff 算法哪个更快？")]),t._v(" "),s("p",[t._v("取决于组件的复杂程度，当组件内元素数量越多时， VDOM Diff 所需要的时间越长，而Svelte 相对性能会更好。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类目")]),t._v(" "),s("th",[t._v("Svelte")]),t._v(" "),s("th",[t._v("Vue")]),t._v(" "),s("th",[t._v("React")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("创建1000行表格")]),t._v(" "),s("td",[t._v("132.3ms")]),t._v(" "),s("td",[t._v("162.3ms")]),t._v(" "),s("td",[t._v("165.7ms")])]),t._v(" "),s("tr",[s("td",[t._v("创建10000行表格")]),t._v(" "),s("td",[t._v("1212ms")]),t._v(" "),s("td",[t._v("1252ms")]),t._v(" "),s("td",[t._v("1594.9ms")])]),t._v(" "),s("tr",[s("td",[t._v("在1000行表格中交换2行")]),t._v(" "),s("td",[t._v("51.8ms")]),t._v(" "),s("td",[t._v("66.6ms")]),t._v(" "),s("td",[t._v("429.6ms")])]),t._v(" "),s("tr",[s("td",[t._v("首屏加载时间")]),t._v(" "),s("td",[t._v("19.5ms")]),t._v(" "),s("td",[t._v("59.6ms")]),t._v(" "),s("td",[t._v("55.6ms")])])])]),t._v(" "),s("p",[t._v("性能数据来自"),s("a",{attrs:{href:"https://github.com/krausest/js-framework-benchmark",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS framework benchmark"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"svelte-劣势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svelte-劣势"}},[t._v("#")]),t._v(" Svelte 劣势")]),t._v(" "),s("p",[t._v("在构建大型前端项目时，我们在选择框架的时候就需要考虑更多的事情。")]),t._v(" "),s("p",[t._v("Svelte 目前尚处在起步阶段，对于大型项目必要的"),s("strong",[t._v("单元测试")]),t._v("并没有完整的方案。目前在大型应用中使用 Svelte , 需要谨慎。")]),t._v(" "),s("h3",{attrs:{id:"和vue-react框架的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和vue-react框架的对比"}},[t._v("#")]),t._v(" 和Vue， React框架的对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类目")]),t._v(" "),s("th",[t._v("Svelte")]),t._v(" "),s("th",[t._v("Vue")]),t._v(" "),s("th",[t._v("React")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("UI 组件库")]),t._v(" "),s("td",[t._v("Material design")]),t._v(" "),s("td",[t._v("Element UI / AntD")]),t._v(" "),s("td",[t._v("AntD / Material design")])]),t._v(" "),s("tr",[s("td",[t._v("状态管理")]),t._v(" "),s("td",[t._v("官网自带")]),t._v(" "),s("td",[t._v("Vuex")]),t._v(" "),s("td",[t._v("Redux/MobX")])]),t._v(" "),s("tr",[s("td",[t._v("路由")]),t._v(" "),s("td",[t._v("Svelte-router")]),t._v(" "),s("td",[t._v("Vue-router")]),t._v(" "),s("td",[t._v("React-router")])]),t._v(" "),s("tr",[s("td",[t._v("服务端渲染")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("TypeScript")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("测试工具")]),t._v(" "),s("td",[t._v("官方网站没有相关内容")]),t._v(" "),s("td",[t._v("@vue/test-utils")]),t._v(" "),s("td",[t._v("Jest")])])])]),t._v(" "),s("h3",{attrs:{id:"潜在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#潜在的问题"}},[t._v("#")]),t._v(" 潜在的问题")]),t._v(" "),s("blockquote",[s("p",[t._v("虽然在简单的 demo 里面代码量确实非常小，但同样的组件模板，这样的 imperative 操作生成的代码量会比  Virtual DOM 渲染函数要大，多个组件中会有很多重复的代码（虽然 gzip 时候可以缓解，但 parse 和 evaluate 是免不了的）。项目里的组件越多，代码量的差异就会逐渐缩小。同时，并不是真正的如宣传的那样 “没有 Runtime“，而是根据你的代码按需 import 而已。使用的功能越多，Svelte 要包含的运行时代码也越多，最终在实际生产项目中能有多少尺寸优势，其实很难说。")])]),t._v(" "),s("blockquote",[s("p",[t._v("Svelte 在大型应用中的性能还有待观察，尤其是在大量动态内容和嵌套组件的情况下。它的更新策略决定了它也需要类似 React 的 shouldComponentUpdate 的机制来防止过度更新。另一方面，其性能优势比起现在的主流框架并不是质的区别，现在大部分主流框架的性能都可以做到 vanilla js 的 1.2~1.5 倍慢，基于 Virtual DOM 的 Inferno 更是接近原生，证明了 Virtual DOM 这个方向理论上的可能性，所以可以预见以后 web 的性能瓶颈更多是 DOM 本身而不是框架。")])]),t._v(" "),s("blockquote",[s("p",[t._v("Svelte 的编译策略决定了它跟 Virtual DOM 绝缘（渲染函数由于其动态性，无法像模板那样可以被可靠地静态分析），也就享受不到 Virtual DOM 带来的诸多好处，比如基于 render function 的组件的强大抽象能力，基于  Virtual DOM 做测试，服务端/原生渲染亲和性等等。这一点在我看来比较关键。让我在一点点性能和 Virtual DOM 之间做抉择的话，我还是会选择 Virtual DOM。Vue 3 在保留 Virtual DOM 灵活性的前提下基于模版对渲染函数做 AOT 优化，性能已经做到跟 Svelte 很接近。")])]),t._v(" "),s("p",[t._v("这3点潜在问题出自尤雨溪在知乎对"),s("a",{attrs:{href:"https://www.zhihu.com/question/53150351",target:"_blank",rel:"noopener noreferrer"}},[t._v("《如何看待 Svelte 这个前端框架？》"),s("OutboundLink")],1),t._v("的评价，很客观的说明了Svelte在大型项目上可能存在的问题，以及对性能和Virtual DOM之间所做的取舍。")]),t._v(" "),s("h2",{attrs:{id:"响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式原理"}},[t._v("#")]),t._v(" 响应式原理")]),t._v(" "),s("h3",{attrs:{id:"整体更新渲染流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体更新渲染流程"}},[t._v("#")]),t._v(" 整体更新渲染流程")]),t._v(" "),s("p",[t._v("Svelte 是如何更新数据，渲染结果的呢？Svelte 整体的更新渲染流程是怎么样子的呢？")]),t._v(" "),s("p",[t._v("接下来，我将编译一个最简单的例子，深入Svelte 的每一行源码。")]),t._v(" "),s("p",[t._v("例子的代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button on"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n \n \n")])])]),s("p",[t._v("上面代码： 当点击按钮时，count 变量会更新，同时渲染到DOM节点上，那么这神奇的一切背后发生了什么？一共经历了哪些阶段？")]),t._v(" "),s("p",[t._v("我梳理了 Svelte 打包后代码的整体流程，发现还是比较简单的，用画图表示如下：\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/51014257fae3688ec3e95e94ef82f606.png",alt:"image.png"}})]),t._v(" "),s("ul",[s("li",[s("code",[t._v("click")]),t._v(" 事件发生之后，会发生两件事情:\n"),s("ul",[s("li",[t._v("count 变量被修改: "),s("code",[t._v("count += 1")])]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("$$invalidate")]),t._v(" 方法")])])]),t._v(" "),s("li",[s("code",[t._v("$$invalidate")]),t._v(" 方法又调用了 "),s("code",[t._v("make_dirty")]),t._v(" 方法，"),s("code",[t._v("make_dirty")]),t._v(" 是记住已经脏的数据，里面做了两件事情，比较复杂，后面会讲到。")]),t._v(" "),s("li",[t._v("数据弄脏之后，不是立马更新，而是"),s("code",[t._v("schedule_update()")]),t._v(" 方法把 "),s("code",[t._v("flush")]),t._v(" 回调推到16ms一帧的最后去执行。")]),t._v(" "),s("li",[s("code",[t._v("flush")]),t._v(" 被执行时，遍历所有的"),s("code",[t._v("diry_components")]),t._v(" 中的组件，调用他们的 "),s("code",[t._v(".p()")]),t._v(" 方法。"),s("code",[t._v(".p()")]),t._v("方法是编译生成的，里面有一个神奇的 if 判断，如果走进判断体，则调用 "),s("code",[t._v("setData")]),t._v(" 方法更新DOM节点")])]),t._v(" "),s("p",[t._v("看上去一头雾水？没关系，只需要有一个大致的印象，下面会详细的介绍每一个过程。")]),t._v(" "),s("h4",{attrs:{id:"click事件发生后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#click事件发生后"}},[t._v("#")]),t._v(" click事件发生后")]),t._v(" "),s("p",[t._v("首先，我们在浏览器里面执行的并不是我们写的代码，而是 Svelte 编译修改之后的。")]),t._v(" "),s("p",[t._v("增加了一个instance 方法，如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$$self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $$props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $$invalidate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$$invalidate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[s("code",[t._v("onClick")]),t._v("方法里面的逻辑被改写了，先是对 count 重新赋值（"),s("code",[t._v("count = count + 1")]),t._v("），然后加入对 "),s("code",[t._v("$$invalidate()")]),t._v(" 方法的调用。")]),t._v(" "),s("h4",{attrs:{id:"invalidate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invalidate"}},[t._v("#")]),t._v(" $$invalidate")]),t._v(" "),s("p",[s("code",[t._v("$$invalidate")]),t._v("方法也是编译生成，删掉其他无关紧要的逻辑之后，只剩下下面的逻辑：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$$invalidate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_dirty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("也就是调用 "),s("code",[t._v("make_dirty()")]),t._v(" 方法")]),t._v(" "),s("h4",{attrs:{id:"make-dirty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-dirty"}},[t._v("#")]),t._v(" make_dirty")]),t._v(" "),s("p",[s("code",[t._v("make_dirty")]),t._v(" 方法做了两件事情把当前组件弄脏： 1. 把当前的compoent 推到 dirty_components 数组中 2. 通过二进制的值来记录脏数据，目的是为了节省内存。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_dirty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 component.$$.dirty[0] ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty_components 记录了，脏组件 ")]),t._v("\n    dirty_components"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面代码的原理是，通过二进制的值来记录脏数据 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要尝试看懂，下面会讲 ")]),t._v("\n  component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("之后，调用了 "),s("code",[t._v("schedule_update()")])]),t._v(" "),s("h4",{attrs:{id:"schedule-update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedule-update"}},[t._v("#")]),t._v(" schedule_update")]),t._v(" "),s("p",[s("code",[t._v("schedule_update")]),t._v("的作用是，把一个"),s("code",[t._v("flush")]),t._v(" 的方法放到一个"),s("code",[t._v("Promise.then")]),t._v("里面:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  resolved_promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("背后其实是，让 "),s("code",[t._v("flush")]),t._v(" 方法在这一帧的微任务被执行的时候执行。")]),t._v(" "),s("h4",{attrs:{id:"一帧-16ms-之内发生的任务的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一帧-16ms-之内发生的任务的顺序"}},[t._v("#")]),t._v(" 一帧 16ms 之内发生的任务的顺序")]),t._v(" "),s("ul",[s("li",[t._v("响应用户输入事件(scroll / click / key)")]),t._v(" "),s("li",[s("code",[t._v("Javascript")]),t._v("执行")]),t._v(" "),s("li",[s("code",[t._v("requestAnimation")]),t._v(" / "),s("code",[t._v("Intersection Observer cb")])]),t._v(" "),s("li",[t._v("布局 Layout")]),t._v(" "),s("li",[t._v("绘制 Paint")]),t._v(" "),s("li",[t._v("如果 16ms 还有盈余，调用 "),s("code",[t._v("requestIdleCallback")]),t._v(" ，若没有，通过第二个参数指定一个到时必处理")]),t._v(" "),s("li",[t._v("宏任务 ( "),s("code",[t._v("setTimeout")]),t._v(" / "),s("code",[t._v("MessageChannel.onMessage")]),t._v(" )")]),t._v(" "),s("li",[t._v("微任务 ("),s("code",[t._v("Promise.then()")]),t._v("/"),s("code",[t._v("process.nextTick")]),t._v("(Node))")])]),t._v(" "),s("h4",{attrs:{id:"flush"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flush"}},[t._v("#")]),t._v(" flush")]),t._v(" "),s("p",[s("code",[t._v("flush")]),t._v(" 方法里面的逻辑是：遍历所有的"),s("code",[t._v("diry_components")]),t._v(" 中的组件，调用"),s("code",[t._v("update")]),t._v(" 方法，"),s("code",[t._v("update")]),t._v(" 方法里面，最后调用了组件的"),s("code",[t._v(".p()")]),t._v("方法。 "),s("code",[t._v(".p()")]),t._v(" 方法是编译生成的。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果正在 flushing , 就退出 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flushing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  flushing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" dirty_components"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dirty_components"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n \n    flushing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n \n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先假设 $$.fragment 都不是 null ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    $$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ~~~~~~~~~~~~~~~ before_update 生命周期 ~~~~~~~~~~~~~~~ ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run_all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("before_update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dirty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有必须的 更新，必须要更新了，调用 p 方法 ")]),t._v("\n    $$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" $$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ~~~~~~~~~~~~~ after_update 生命周期 ~~~~~~~~~~~~~~~ ")]),t._v("\n    $$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("after_update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add_render_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h4",{attrs:{id:"p方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p方法"}},[t._v("#")]),t._v(" "),s("code",[t._v(".p")]),t._v("方法")]),t._v(" "),s("p",[t._v(".p 方法核心功能，就是用最新的数据来更新DOM节点，大概长下面这样：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// & 是位运算 ")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set_data 就是把 dom 节点的 data 值更新 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n")])])]),s("p",[s("code",[t._v("set_data")]),t._v(" 就是封装了 DOM 的原生方法（比如说 "),s("code",[t._v("innerHtml")]),t._v("），把 DOM 节点更新。")]),t._v(" "),s("p",[t._v("上面神奇的 "),s("code",[t._v("if")]),t._v(" 判断，就是判断脏数据是否会影响到对应的DOM节点，如果是，则精准的更新那一个DOM节点。"),s("code",[t._v("p")]),t._v(" 方法之所以知道更新哪一个DOM节点，是因为这个方法在编译的过程中，就通过 AST 等手段记录了 DATA 和 DOM 节点的对应关系, 下小节会详细介绍。")]),t._v(" "),s("h4",{attrs:{id:"整体流程小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体流程小结"}},[t._v("#")]),t._v(" 整体流程小结")]),t._v(" "),s("p",[t._v("你可能还是一头雾水，最大的困惑在于Svelte 是如何根据脏数据更新DOM节点的。为了彻底理解这块的逻辑，请务必要看下面这一小节。")]),t._v(" "),s("h3",{attrs:{id:"svelte-脏数据更新dom-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svelte-脏数据更新dom-原理"}},[t._v("#")]),t._v(" Svelte 脏数据更新DOM 原理")]),t._v(" "),s("p",[t._v("任何一个现代前端框架，都需要记住哪些数据更新了，把更新了的数据视为脏数据，然后根据脏数据计算出最新的DOM状态。")]),t._v(" "),s("p",[t._v("Svelte使用"),s("strong",[t._v("位掩码（bitMask）")]),t._v(" 的技术来跟踪哪些值是脏的，即自组件最后一次更新以来，哪些数据发生了哪些更改。")]),t._v(" "),s("p",[s("strong",[t._v("位掩码是一种将多个布尔值存储在单个整数中的技术，一个比特位存放一个数据是否变化，一般1表示脏数据，0 表示是干净数据。")])]),t._v(" "),s("p",[t._v("用大白话来讲，你有A、B、C、D 四个值，那么二进制"),s("code",[t._v("0000 0001")]),t._v("表示第一个值"),s("code",[t._v("A")]),t._v(" 发生了改变，"),s("code",[t._v("0000 0010")]),t._v(" 表示第二个值 "),s("code",[t._v("B")]),t._v(" 发生了改变，"),s("code",[t._v("0000 0100")]),t._v("表示第三个值 "),s("code",[t._v("C")]),t._v(" 发生了改变，"),s("code",[t._v("0000 1000")]),t._v("表示第四个 "),s("code",[t._v("D")]),t._v(" 发生了改变。")]),t._v(" "),s("p",[t._v("这种表示法，可以最大程度的利用空间。为啥这么说呢？")]),t._v(" "),s("p",[t._v("比如说，十进制数字"),s("code",[t._v("3")]),t._v(" 就可以表示 A、B是脏数据。先把十进制数字"),s("code",[t._v("3")]),t._v("， 转变为二进制 "),s("code",[t._v("0000 0011")]),t._v("。")]),t._v(" "),s("p",[t._v("从左边数第一位、第二位是1，意味着第一个值A 和第二个值B是脏数据；其余位都是0，意味着其余数据都是干净的。")]),t._v(" "),s("h4",{attrs:{id:"js-的限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-的限制"}},[t._v("#")]),t._v(" JS 的限制")]),t._v(" "),s("p",[t._v("JS 里面无论是小数还是整数，都是按照64位的浮点数形式存储的，而整数的运算会自动转化为32位的有符号整数，减去1位用来存放符号，也就是31位。也就是说，如果 Svelte 采用二进制位存储的方法，那么只能存 31个数据。")]),t._v(" "),s("p",[t._v("但肯定不能这样，对吧？")]),t._v(" "),s("p",[s("strong",[t._v("Svelte采用数组来存放")]),t._v("，数组中一项是二进制31 位的比特位。假如超出31 个数据了，超出的部分放到数组中的下一项 。")]),t._v(" "),s("p",[t._v("这个数组就是"),s("code",[t._v("component.$$.dirty")]),t._v(" 数组，二进制的"),s("code",[t._v("1")]),t._v("位表示该对应的数据发生了变化，是脏数据，需要更新；二进制的"),s("code",[t._v("0")]),t._v(" 位表示该对应的数据没有发生变化，是干净的。")]),t._v(" "),s("h4",{attrs:{id:"一探究竟-component-dirty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一探究竟-component-dirty"}},[t._v("#")]),t._v(" 一探究竟 "),s("code",[t._v("component.$$.dirty")])]),t._v(" "),s("p",[t._v("上文中，我们说到 "),s("code",[t._v("component.$$.dirty")]),t._v(" 是数组，具体这个数组长什么样呢？")]),t._v(" "),s("p",[t._v("我们模拟一个 Svelte 组件，这个 Svelte 组件会修改33个数据。")]),t._v(" "),s("p",[t._v("我们打印出每一次"),s("code",[t._v("make_dirty")]),t._v(" 之后的"),s("code",[t._v("component.$$.dirty")]),t._v(" ， 如下面所示：\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/2d75ea012f820669b3a32406069e5a88.png",alt:"image.png"}}),t._v("\n看上去，貌似根本找不出一些规律。")]),t._v(" "),s("p",[t._v("Svelte 正是用 component.$$.dirty 的数组中看似无规律的数字来表示有哪些数据需要更新的。")]),t._v(" "),s("p",[t._v("如果我们把上面数组中的值，都十进制转为二进制来，再来观察一下：\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/ea39827f45d5558e74c7ce545a5bc83b.png",alt:"image.png"}}),t._v("\n上面数组中的每一项中的每一个比特位，如果是1，则代表着该数据是否是脏数据。如果是脏数据，则意味着更新。")]),t._v(" "),s("ul",[s("li",[t._v("第一行 ["),s("code",[t._v('"0000000000000000000000000000001"')]),t._v(", "),s("code",[t._v('"0000000000000000000000000000000"')]),t._v("], 表示第一个数据脏了，需要更新第一个数据对应的dom节点")]),t._v(" "),s("li",[t._v("第二行 ["),s("code",[t._v('"0000000000000000000000000000011"')]),t._v(", "),s("code",[t._v('"0000000000000000000000000000000"')]),t._v("], 表示第一个、第二个数据都脏了，需要更新第一个，第二个数据对应的dom节点")]),t._v(" "),s("li",[t._v("......\n当一个组件内，数据的个数，超出了31的数量限制，就数组新增一项来表示。")])]),t._v(" "),s("h4",{attrs:{id:"如何设置为脏数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何设置为脏数据"}},[t._v("#")]),t._v(" 如何设置为脏数据")]),t._v(" "),s("p",[t._v("原理上，设置为脏数据，比较简单，就是把"),s("code",[t._v("component.$$.dirty")]),t._v("数组二进制对应的比特位设置为"),s("code",[t._v("1")])]),t._v(" "),s("p",[t._v("实际上，这段逻辑对应的源码非常精炼和复杂，就下面一行代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("上面的代码是啥意思呢？把指定bit位上代表的记为脏数据。")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v("表示ctx中第几个变量，"),s("code",[t._v("1")]),t._v("表示第一个变量，"),s("code",[t._v("2")]),t._v("表示第二个变量。")]),t._v(" "),s("h4",{attrs:{id:"i-31-0-啥意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-31-0-啥意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("(i/31)|0")]),t._v(" 啥意思？")]),t._v(" "),s("p",[s("code",[t._v("i/31")]),t._v("表示用 "),s("code",[t._v("i")]),t._v(" 来除"),s("code",[t._v("31")]),t._v(", "),s("code",[t._v("(i/31) |0")]),t._v("相当于是对"),s("code",[t._v("(i/31)")]),t._v("的结果取整。\n如果你觉得很不好理解，可以简单的理解为"),s("code",[t._v("Math.floor(i/31)")]),t._v(" ，也就是对"),s("code",[t._v("i/31")]),t._v(" 的结果取整。")]),t._v(" "),s("h4",{attrs:{id:"component-dirty-i-31-0-啥意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-dirty-i-31-0-啥意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("component.$$.dirty[(i/31)|0]")]),t._v(" 啥意思 ？")]),t._v(" "),s("p",[s("code",[t._v("component.$$.dirty[(i / 31) | 0]")]),t._v(" 表示"),s("code",[t._v("component.$$.dirty")]),t._v(" 的第几项，也就是，"),s("code",[t._v("i")]),t._v("对应的数组，落在"),s("code",[t._v("component.$$.dirty")]),t._v("数组中哪一项。")]),t._v(" "),s("p",[t._v("还记得我们的"),s("code",[t._v("component.$$.dirty")]),t._v(" 变为二进制之后长什么样子吗？")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// component.$$.dirty ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0000000000000000000000000000001"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0000000000000000000000000000000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("p",[s("code",[t._v("i")]),t._v("如果超出了31个位数限制，会在"),s("code",[t._v("component.$$.dirty")]),t._v(" 数组中增加一项。")]),t._v(" "),s("h4",{attrs:{id:"_1-i-31-啥意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-i-31-啥意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("1 <<（i％31）")]),t._v(" 啥意思？")]),t._v(" "),s("p",[t._v("先讨论 "),s("code",[t._v("<<")]),t._v(" 的计算规则。 "),s("code",[t._v("<<")]),t._v("左移的规则就是转为二进制的每一位都向左移动一位，末尾补0。\n比如说"),s("code",[t._v("3 << 2")]),t._v("计算过程是，把"),s("code",[t._v("3")]),t._v(" 变成二级制后，所有位数左移2位。\n下面是"),s("code",[t._v("3 << 2")]),t._v(" 具体的计算过程：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("3 的二进制表示为 0000 0011 \n所有位数左移2位变为 0000 1100 \n转变为十进制后为 12（ 相当于 3 * 4， 也就是变大了 2 的2次方倍 ） \n")])])]),s("p",[t._v("可以这么理解，二级制后所有位数左移n位， 其效果相当于"),s("code",[t._v("<<")]),t._v("左边数 ，会被放大2的n次方")]),t._v(" "),s("p",[t._v("假设"),s("code",[t._v("i")]),t._v("为 "),s("code",[t._v("3")]),t._v(", 也就是ctx 中第4个数据发生了改变，"),s("code",[t._v("1 << (3%31)")]),t._v(" 计算出的结果是 "),s("code",[t._v("8")]),t._v("， 转变为二进制后是 "),s("code",[t._v("1000")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"啥意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#啥意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("|=")]),t._v(" 啥意思？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Operator: x |= y  \nMeaning:  x  = x | y  \n")])])]),s("p",[s("code",[t._v("|=")]),t._v("是按位或赋值运算符， 运算过程是使用两个操作数的二进制，对它们执行按位或运算，并将结果赋值给变量。")]),t._v(" "),s("p",[t._v("注意哦。")]),t._v(" "),s("p",[t._v("我们最初的代码是这样的：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("为了好理解，可以改写成下面这个样子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \nitem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("上文说过，假设 i 为 3， "),s("code",[t._v("1 << (i % 31)")]),t._v("计算为 8， 二进制表示为\n"),s("code",[t._v("0000000000000000000000000001000")]),t._v("\n假如 item 二进制表示为"),s("code",[t._v("0000000000000000000000000000001")]),t._v("，"),s("code",[t._v("|")]),t._v("按位或计算后，从右开始第4位设置为 1。\n也就是说， 将指定的那一位设置为1，无论其值之前是多少。")]),t._v(" "),s("h4",{attrs:{id:"小结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("这一小节，你只需要了解到，Svelte 通过一顿 JS位操作符的操作, 把脏数据在 "),s("code",[t._v("component.$$.dirty")]),t._v(" 的二进制上对应的位置设置为"),s("code",[t._v("1")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"更新哪些dom节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新哪些dom节点"}},[t._v("#")]),t._v(" 更新哪些DOM节点")]),t._v(" "),s("p",[t._v("上面一个小节，我们知道了， Svelte会用 "),s("code",[t._v("component.$$.dirty")]),t._v("数组存储第几个是脏数据。")]),t._v(" "),s("p",[t._v("那么，有了脏数据之后，Svelte就会在一帧16ms的微任务调用更新DOM节点的方法。更新DOM节点的方法，最终会调用一个"),s("code",[t._v("p")]),t._v(" 方法。 在 "),s("code",[t._v("p")]),t._v("方法 被调用之前，Svelte 并不知道要具体更新哪些DOM节点。")]),t._v(" "),s("p",[s("code",[t._v("p")]),t._v("方法的作用只有一个，就是判断出需要更新的DOM节点，并且调用DOM原生的方法更新之。")]),t._v(" "),s("p",[t._v("为了测试，我们模拟一个Svelte 组件，这个Svelte 组件会修改33个数据，通过Svelte 提供的特别好的在线 repl 工具，可以方便的看到编译出来的产物，如下图所示：\n"),s("img",{attrs:{src:"https://pan.udolphin.com/files/image/2021/7/abf75aaeb58c1f2450de7900a12e8bb5.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("编译出来的"),s("code",[t._v("p")]),t._v(" 方法如下，大概长这个样子, 因为我们没有开启代码压缩，所以看起来代码有很多:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dirty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name1*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name1*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name2*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name2*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name3*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name3*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name4*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name4*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name5*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name5*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name6*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name6*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name7*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name7*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name8*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t15"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name8*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name9*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name9*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name10*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name10*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name11*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t21"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name11*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name12*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t23"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name12*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name13*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t25"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name13*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name14*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t27"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name14*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name15*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16384")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t29"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name15*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name16*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32768")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t31"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name16*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name17*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t33"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name17*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name18*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("131072")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t35"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name18*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name19*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("262144")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t37"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name19*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name20*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("524288")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t39"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name20*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name21*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1048576")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t41"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name21*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name22*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2097152")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t43"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name22*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name23*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4194304")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t45"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name23*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name24*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8388608")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t47"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name24*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name25*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16777216")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t49"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name25*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name26*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33554432")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t51"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name26*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name27*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("67108864")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t53"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name27*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name28*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("134217728")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t55"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name28*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name29*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("268435456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t57"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name29*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name30*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("536870912")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t59"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name30*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name31*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1073741824")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t61"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name31*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name32*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t63"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name32*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name33*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t65"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name33*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("我们一起来看，但其实一分析，发现这一坨代码很好理解：有 "),s("code",[t._v("33")]),t._v(" 个"),s("code",[t._v("if")]),t._v(" 判断，如果判断为"),s("code",[t._v("true")]),t._v("，就调用 "),s("code",[t._v("setData")]),t._v("。")]),t._v(" "),s("p",[t._v("上面代码中的 "),s("code",[t._v("dirty")]),t._v(" 变量，其实就是"),s("code",[t._v("component.$$.dirty")]),t._v(" 数组，上文中我们介绍过了，回顾一下二进制大概长这个样子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty === component.$$.dirty ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0000000000000000000000000000001"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0000000000000000000000000000000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("p",[t._v("上面代码中的 "),s("code",[t._v("ctx")]),t._v(" 对象存放了数据，而且都是最新的数据："),s("code",[t._v("ctx[0]")]),t._v(" 表示第一个数据，"),s("code",[t._v("ctx[1]")]),t._v(" 表示第二个数据……")]),t._v(" "),s("p",[t._v("上面代码中的"),s("code",[t._v("set_data")]),t._v(" 方法，封装了更新 DOM 节点的原生方法，把"),s("code",[t._v("ctx")]),t._v(" 中存放的最新的数据，更新到dom节点上。")]),t._v(" "),s("p",[t._v("还是一头雾水不要慌，我们拿上面代码里第4行举例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name3*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*name3*/")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[s("code",[t._v("if")]),t._v(" 判断值是"),s("code",[t._v("dirty[0] & 4")]),t._v(" 。"),s("code",[t._v("dirty")]),t._v("存放了哪些数据是脏数据，这里的"),s("code",[t._v("4")]),t._v(" 看似是无规律的数字，转化为二进制之后变成了"),s("code",[t._v("0000 0100")]),t._v("（从右到左第三位是 "),s("code",[t._v("1")]),t._v("）， 也就是 表示第三个数据脏数据。")]),t._v(" "),s("p",[t._v("这里的 "),s("code",[t._v("if")]),t._v(" 判断条件是：拿 "),s("code",[t._v("dirty[0]")]),t._v("( "),s("code",[t._v("0000000000000000000000000000001")]),t._v(")和"),s("code",[t._v("4")]),t._v(" （"),s("code",[t._v("4")]),t._v(" 转变为二进制是 "),s("code",[t._v("0000 0100")]),t._v("）做"),s("code",[t._v("按位并")]),t._v("操作。那么我们可以思考一下了，这个"),s("code",[t._v("按位并")]),t._v("操作什么时候会返回 "),s("code",[t._v("1")]),t._v("呢？")]),t._v(" "),s("p",[t._v("只有当"),s("code",[t._v("4")]),t._v(" 转变为二进制是"),s("code",[t._v("0000 0100")]),t._v("的第三位是"),s("code",[t._v("1")]),t._v(" ，同时"),s("code",[t._v("dirty[0]")]),t._v(" 的二进制的第三位也是"),s("code",[t._v("1")]),t._v(" 时, 才会返回 "),s("code",[t._v("1")]),t._v("。 换句话来说， "),s("code",[t._v("dirty[0]")]),t._v(" 的二进制的第三位也是"),s("code",[t._v("1")]),t._v(" ，意味着第三个数据是脏数据。简单来说，只要第三个数据是脏数据，就会走入到这个if 判断中，执行 "),s("code",[t._v("set_data(t5, /*name3*/ ctx[2])")]),t._v("， 更新 "),s("code",[t._v("t5")]),t._v(" 这个 DOM 节点。")]),t._v(" "),s("p",[t._v("当我们分析到这里，已经看出了一些眉目，让我们站在更高的一个层次去看待这 30多行代码： 它们其实是保存了这"),s("strong",[t._v("33个变量和真实DOM 节点")]),t._v("之间的对应关系，哪些变量脏了，Svelte 会走入不同的"),s("code",[t._v("if")]),t._v(" 体内直接更新对应的DOM节点，而不需要复杂 Virtual DOM Diff 算出更新哪些DOM节点。")]),t._v(" "),s("p",[t._v("这 30多行代码，是Svelte 编译了我们写的Svelte 组件之后的产物，在Svelte 编译时，就已经分析好了，数据 和 DOM 节点之间的对应关系，在数据发生变化时，可以非常高效的来更新DOM节点。")]),t._v(" "),s("h4",{attrs:{id:"小结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("一个前端框架，不管是Vue还是 React 更新了数据之后，需要考虑更新哪个DOM节点，也就是，需要知道，脏数据和待更新的真实DOM之间的映射。\nVue, React 是通过 Virtual DOM  来 Diff 计算出更新哪些DOM节点更划算。\n而Svelte是把数据和真实DOM之间的映射关系，在编译的时候就通过AST等算出来，保存在"),s("code",[t._v("p")]),t._v(" 函数中。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("本文介绍 了Svelte 框架的特性、优缺点和底层原理。")]),t._v(" "),s("p",[t._v("Svelte 算是让 Web 页面的工作方式回归到最原始的方法了，当然我说的不是开发方式，这里我指的是浏览器真实在执行的工作。传统的 Web 开发基本都是 jQuery 的天下，$('xxx') 出来一个元素然后直接对它进行操作，但随着应用规模的扩大，这种没有集中状态管理，只靠粗暴操作 DOM 的方式就行不太通了，架构不好的代码维护起来也会很费劲。")]),t._v(" "),s("p",[t._v("为了解决上述痛点，以 Angular 1.0 为代表的 MVC 框架诞生了，紧接着 React、Vue 等流行框架就如雨后春笋般地出现了。对于我而言，Svelte 实现"),s("strong",[t._v("响应式")]),t._v("确实特立独行。作为一个最近才火起来的框架，Svelte的生态还远远不及已经普及那么多年的React和Vue，这也是我觉得就目前来说Svelte还撼动不了React和Vue的地位的原因。不过Svelte会不会因为它的先进性而迎来生态大爆发呢？")]),t._v(" "),s("p",[t._v("Svelte 为我们提供了  Virtual DOM 之外另一种可能性，通过静态编译减少框架运行时的代码量，让编译打包后的产物在完整实现功能的同时又有极高的性能和很小的体积，未来还将有很大的挖掘空间。")]),t._v(" "),s("p",[t._v("感谢您的阅读，我是数字办的吴昕，期待与您共同成长！！！")])])}),[],!1,null,null,null);s.default=e.exports}}]);